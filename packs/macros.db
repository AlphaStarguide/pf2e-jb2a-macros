{"_id":"1SwXNmbriolNG2ap","name":"Rebounding Toss","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/ranged/shuriken-thrown-orange.webp","scope":"global","command":"// WIP!\n return // Comment me out to test\n\nlet targets = Array.from(game.user.targets);\nlet token = args[0].token;\nlet items = args[0].token._actor.items.filter(i => i.type === \"weapon\" && i.isHeld === true)\nlet weapons = []\n\ntoken.actor.sheet.minimize();\n\nlet imageProperties = [\n    \"padding: 1em 1em\",\n    \"border: none\",\n    \"width: 10em\",\n    \"height: auto\"\n]\n\nitems.forEach(x => weapons.push({label: `<img src=\"${x.img}\" style=\"${imageProperties.join(\";\")}\"><p>${x.name}</p>`, value: x}))\n\nlet weaponSelection = await warpgate.menu(\n    {\n        inputs: [\n            { \n                type: 'info', \n                label: 'Which weapon are you attacking with?'\n            },\n            { \n                type: 'info', \n                label: 'Only Equipped Weapons are shown, draw your weapon first if you want to attack with it!'\n            }\n        ],\n        buttons: weapons\n    }, \n    { \n        title: \"Rebounding Toss\"\n    }\n)\n\n\n// Second Throw BS\nlet distanceLimit = 10\nconst tokenCenter = targets[0];\nlet cachedDistance = 0;\n\nconst checkDistance = async(crosshairs) => {\n\n    while (crosshairs.inFlight) {\n        \n        //wait for initial render\n        await warpgate.wait(100);\n        \n        const ray = new Ray( tokenCenter, crosshairs );\n        \n        const distance = canvas.grid.measureDistances([{ray}], {gridSpaces:true})[0]\n\n        //only update if the distance has changed\n        if (cachedDistance !== distance) {\n          cachedDistance = distance;     \n          if(distance > distanceLimit) {\n              crosshairs.icon = 'icons/svg/hazard.svg'\n          } else {\n              crosshairs.icon = weaponSelection.buttons.img\n          }\n          crosshairs.draw()\n          crosshairs.label = `${distance} ft`\n        }\n    }\n}\n\nconst callbacks = {\n    show: checkDistance\n}\n\nif (weaponSelection.buttons) {\n    let weaponOfChoice = (actor.data.data.actions ?? []).filter(action => action.type === 'strike').find(strike => strike.name === weaponSelection.buttons.data.name)\n    \n    if (targets.length === 1) {\n        // Roll attack\n        weaponOfChoice?.attack();\n        \n        // Check if attack hit\n        const secondThrowLocation = warpgate.crosshairs.show({size: token.data.width, icon: token.data.img, label: '0 ft.'}, callbacks);\n                \n        // Handle fuckups\n        if (location.cancelled) {\n            ui.notifications.error('Cancelled Rebounding Toss\\'s second throw.');\n            return;\n        }\n        if (cachedDistance > distanceLimit) {\n            ui.notifications.error('Your Rebounding Toss can only attack a second target within 10 feet of the first one.')\n            return;\n        }\n        \n        const boundsContains = (bounds, point) =>\n            bounds.left <= point.x\n            && point.x <= bounds.right\n            && bounds.top <= point.y\n            && point.y <= bounds.bottom;\n    \n        const found = !!canvas.tokens.placeables.map(x => x.bounds).find(b => boundsContains(b, secondThrowLocation));\n    } else if (targets.length > 1) ui.notifications.info(\"Too many targets!\"); else ui.notifications.info(\"No Targets!\")\n}\n\ntoken.actor.sheet.maximize();","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.fdIIA40dPrWNfbyr"},"cf":{"id":"temp_9hsvsxrbtvj"}}}
{"_id":"1dUKN6KL7g3cdDdz","name":"Bouncing Lightning","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/electric-arc.webp","scope":"global","command":"// Can be used standalone!\n\nlet token = args[1]?.sourceToken ?? canvas.tokens.controlled[0]\nlet targetTokens = Array.from(game.user.targets)\nlet sequence = new Sequence() // this is the naimation part, handled by the Sequencer module\n    .effect()\n        .file(\"jb2a.chain_lightning.primary.blue\")\n        .atLocation(token) // Going from origin\n        .stretchTo(targetTokens[0]) // To the current loop's target\n        .waitUntilFinished(-1100)// The next sequence will start 1.1 seconds before the end of the primary Lightning\n    .sound()\n        .file(\"modules/soundfxlibrary/Combat/Single/Spell%20Impact%20Lightning/spell-impact-lightning-3.mp3\")\n        .fadeInAudio(500)\n        .fadeOutAudio(500)\n    .effect()\n        .file(\"jb2a.static_electricity.02.blue\")\n        .atLocation(targetTokens[0])\n        .scaleToObject(1.3)\n        .repeats(2)\n        .wait(100)\nfor (let i = 1; i < targetTokens.length; i++) {\n    sequence\n        .effect()\n            .file(\"jb2a.chain_lightning.secondary.blue\")\n            .repeats(2)\n            .atLocation(targetTokens[i - 1]) // Going from origin\n            .stretchTo(targetTokens[i]) // To the current loop's target\n            .wait(200)\n        .sound()\n            .file(\"modules/soundfxlibrary/Combat/Single/Spell%20Impact%20Lightning/spell-impact-lightning-4.mp3\")\n            .fadeInAudio(500)\n            .fadeOutAudio(500)\n        .effect()\n            .file(\"jb2a.static_electricity.02.blue\")\n            .atLocation(targetTokens[i])\n            .scaleToObject()\n            .repeats(2)\n            .wait(200)\n}\nsequence.play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_7rg2mnzpvsh"}}}
{"_id":"53lks5kxxOscwgvk","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_9hsvsxrbtvj","name":"WIP","color":"#ffffff","fontColor":"#000000","icon":"icons/svg/mystery-man-black.svg","sorting":"m","contents":["reYCOeWs6vFSD91T","1SwXNmbriolNG2ap","SaXHztUmj7Fh9G58"],"children":[],"folderPath":[],"version":"2.4.7"}}}
{"_id":"6yeZBx2HjHHrQIRp","name":"Panache","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/features/classes/panache.webp","scope":"global","command":"let tokenD = args[1].sourceToken\nlet tokenScale = Math.min(args[1].sourceToken.data.scale, 1)\n\nlet premAssets = [\"jb2a.token_border.circle.static.blue.008\"]\nlet freeAssets = [\"jb2a.token_border.circle.static.blue.004\"]\n\nlet assets = premAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .file(\"jb2a.antilife_shell.blue_no_circle\")\n            .name(\"Panache\")\n            .attachTo(tokenD)\n            .filter(\"ColorMatrix\", {\n                hue: 190\n            })\n            .scaleToObject(2 * tokenScale)\n            .waitUntilFinished(-1500)\n        .effect()\n            .file(\"jb2a.wind_stream.white\")\n            .name(\"Panache\")\n            .attachTo(tokenD)\n            .scaleToObject(tokenScale)\n            .rotate(90)\n            .fadeOut(1500)\n            .mask()\n            .fadeIn(700)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .file(assets[0])\n            .name(\"Panache\")\n            .attachTo(tokenD)\n            .filter(\"ColorMatrix\", {\n                hue: 190\n            })\n            .fadeOut(3000)\n            .scaleToObject(2 * tokenScale)\n            .fadeIn(700)\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ name: \"Panache\", object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"7nrt0AppNUZDPmYk","name":"Humanoid Form","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/humanoid-form.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Rebuilt by: MrVauxs#8622\n// Can be used as a standalone!\n// To go back to your original form, click the Revert button at the top of the sheet that's been transformed.\n\nlet tokenD = args[1]?.sourceToken ?? canvas.tokens.controlled[0];\n\nargs = [\"off\"]\nif (!Sequencer.EffectManager.getEffects({ origin: \"Humanoid Form\", object: tokenD }).length) { args = [\"on\"] }\n\nif (args[0] == \"on\") {\n    let tokenName = tokenD.name.toLowerCase().split(\"\").reverse().join(\"\")\n    tokenName = tokenName[0].toUpperCase() + tokenName.slice(1)\n\n    let disguiseDefault = [tokenName, tokenD.data.img, tokenD.data.scale]\n\n    if (Array.from(game.user.targets).length) {\n        disguiseDefault = [Array.from(game.user.targets)[0].name, Array.from(game.user.targets)[0].data.img, Array.from(game.user.targets)[0].data.scale]\n    }\n\n    let disguise = await warpgate.dialog([\n        {\n            type: 'text',\n            label: `ðŸŽ© Name`,\n            options: `${disguiseDefault[0]}`\n        },\n        {\n            type: 'text',\n            label: `âœ¨ Token Image <u style=\"cursor: help;\" title=\"Make sure it works on the scene, CORS is a fickle god.\">URL</u>`,\n            options: `${disguiseDefault[1]}`\n        },\n        {\n            type: 'text',\n            label: `ðŸ“· <u style=\"cursor: help;\" title=\"In case the token you are going into is a pop-out token. Or is smaller than you!\">Token Scale</u>`,\n            options: `${disguiseDefault[2]}`\n        },\n    ],\n    \"ðŸŽ­Humanoid FormðŸŽ­\",\n    \"Cast!\")\n\n    if (!disguise) return;\n\n    // No funny business with empty inputs.\n    disguise = disguise.map((x, index) => x.length === 0 ? disguiseDefault[index] : x)\n   \n    console.log(`PF2e x JB2A Macros | Transformed ${tokenD.name} into ${disguise[0]} with ${disguise[1]} image with scale of ${disguise[2]}.`)\n\n    new Sequence(\"PF2e x JB2A Macros\")\n        .effect()\n            .origin(\"Humanoid Form\")\n            .name(\"Humanoid Form - Intro (Casting)\")\n            .attachTo(tokenD)\n            .file(\"jb2a.magic_signs.circle.02.transmutation.intro\")\n            .scaleToObject(1 * Math.min(1, tokenD.data.scale))\n            .waitUntilFinished(-500)\n            .animateProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 3000, ease: \"easeOutExpo\"})\n        .effect()\n            .origin(\"Humanoid Form\")\n            .name(\"Humanoid Form - Intro (Transformation)\")\n            .file(disguise[1])\n            .scaleToObject(Number(disguise[2]))\n            .fadeIn(800)\n            .attachTo(tokenD)\n        .animation()\n            .on(tokenD)\n            .fadeOut(200)\n        .effect()\n            .origin(\"Humanoid Form\")\n            .name(\"Humanoid Form - Intro (Fade In)\")\n            .file(disguise[1])\n            .fadeIn(800)\n            .duration(900)\n        .effect()\n            .origin(\"Humanoid Form\")\n            .name(\"Humanoid Form - Intro (Fade Out)\")\n            .from(tokenD)\n            .fadeOut(800)\n            .waitUntilFinished(-50)\n        .animation()\n            .on(tokenD)\n            .opacity(1)\n        .thenDo(async () => {\n                await warpgate.mutate(\n                    tokenD.document,\n                    {\n                        token: {\n                            name: disguise[0],\n                            img: disguise[1],\n                            scale: Number(disguise[2])\n                        }\n                    },\n                    {},\n                    {\n                        name: `Humanoid Form (${disguise[0]})`,\n                        description: `This token has used the <a class=\"entity-link content-link\" draggable=\"true\" data-pack=\"pf2e.spells-srd\" data-id=\"2qGqa33E4GPUCbMV\"><i class=\"fas fa-suitcase\"></i> Humanoid Form</a> spell and has turned into ${disguise[0]}!`\n                    }\n                )\n                // See https://github.com/trioderegion/warpgate/issues/72\n                /* await warpgate.event.trigger(\n                    warpgate.EVENT.REVERT,\n                    () => {\n                        new Sequence(\"PF2e x JB2A Macros\")\n                        .effect()\n                            .origin(\"Humanoid Form\")\n                            .name(\"Humanoid Form - Exit\")\n                            .file(disguise[1])\n                            .scaleToObject(Number(disguise[2]))\n                            .attachTo(tokenD)\n                            .fadeOut(1000)\n                        .play()\n                    }\n                )\n                */\n            }\n        )\n        .play();\n} else if (args[0] == \"off\") {\n    Sequencer.EffectManager.endEffects({ origin: \"Humanoid Form\", object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.0fUIZ0XifYGrR9oY"},"cf":{"id":"temp_xz48q3g0ej8"}}}
{"_id":"8M1lDOo679Hsj80q","name":"Aeon Stone","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/commodities/gems/gem-faceted-diamond-silver-.webp","scope":"global","command":"args = args.flat()\nlet tokenD = args[1].actor.getActiveTokens()[0]\nlet stone = \"jb2a.ioun_stones.01\"\nlet colors = {}\nlet stoneType = args[1].data.name.replace(/\\(|\\)|Aeon Stone/g,\"\").toLowerCase().trim()\nlet stoneScale = 0.15\n\nswitch (stoneType) {\n\tcase \"clear spindle\": stone = \"jb2a.ioun_stones.01.white.regeneration\"; break;\n\tcase \"dull grey\": colors = { brightness: 0.9, saturate: -1 }; break;\n\tcase \"agate ellipsoid\": stone = \"jb2a.ioun_stones.02.purple.absorption\"; colors = { hue: 200 }; break;\n\tcase \"azure briolette\": stone = \"jb2a.ioun_stones.02.purple.absorption\"; colors = { hue: 670 }; break;\n\tcase \"black pearl\": stone = \"jb2a.ioun_stones.01.blue.insight\"; colors = { brightness: 0.2 }; break;\n\tcase \"orange prism\": stone = \"jb2a.ioun_stones.02.pink.fortitude\"; colors = { hue: 95 }; break;\n\tcase \"gold nodule\": stone = \"jb2a.ioun_stones.01.blue.awareness\"; colors = { hue: 525 }; break;\n\tcase \"clear quartz octagon\": stone = \"jb2a.ioun_stones.01.pink.protection\"; colors = { brightness: 1, saturate: -1 }; break;\n\tcase \"pearlescent pyramid\": stone = \"jb2a.ioun_stones.02.pink.fortitude\"; colors = { brightness: 1, saturate: -1 }; break;\n\tcase \"dusty rose prism\": stone = \"jb2a.ioun_stones.01.pink.fortitude\"; colors = { saturate: -0.2 }; break;\n\tcase \"lavender and green ellipsoid\": stone = \"jb2a.ioun_stones.02.purple.absorption\"; colors = { hue: 200 }; break;\n\tcase \"pale orange rhomboid\": stone = \"jb2a.ioun_stones.01.blue.strength\"; colors = { saturate: -0.2, hue: 200 }; break;\n\tcase \"pink rhomboid\": stone = \"jb2a.ioun_stones.01.blue.strength\"; colors = { hue: 490 }; break;\n\tcase \"tourmaline sphere\": stone = \"jb2a.ioun_stones.02.red.intellect\"; colors = { brightness: 1.6, hue: -60 }; break;\n\tcase \"western star\": stone = \"jb2a.twinkling_stars.points04.orange\"; stoneScale = 0.6; break;\n\tcase \"pale lavender ellipsoid\": stone = \"jb2a.ioun_stones.01.purple.absorption\"; colors = { brightness: 1.3 }; break;\n\tcase \"pearly white spindle\": stone = \"jb2a.ioun_stones.02.white.sustenance\"; break;\n\n\tdefault: console.log(\"Cannot find '\" + stoneType + \"', picking a random ioun stone animation.\"); break;\n}\n\nif (args[0] == \"on\"){\n\tlet existingEffects = Sequencer.EffectManager.getEffects({ name: `${args[1].actor.data.name} - Aeon Stone - *` })\n\t\n\tnew Sequence()\n\t\t.effect()\n\t\t\t.file(stone)\n\t\t\t.attachTo(tokenD, {followRotation: false})\n\t\t\t.scale(stoneScale)\n\t\t\t.spriteOffset({ y: 0.5 }, { gridUnits: true })\n\t\t\t.filter(\"ColorMatrix\", colors)\n\t\t\t.zeroSpriteRotation()\n\t\t\t.animateProperty(\"sprite\", \"position.y\", { from: 0, to: 0.5, duration: 3000, gridUnits: true })\n\t\t\t.animateProperty(\"sprite\", \"position.y\", { from: 0.5, to: 0, duration: 3000, gridUnits: true, fromEnd: true })\n\t\t\t.loopProperty(\"spriteContainer\", \"rotation\", { from: 0, to: 360, duration: 6000})\n\t\t\t.loopProperty(\"sprite\", \"rotation\", { values: [0, -30, 0, 30], duration: 1500, pingPong: true})\n\t\t\t.scaleOut(0, 800)\n\t\t\t.scaleIn(0, 800)\n\t\t\t.persist(true, {persistTokenPrototype: true})\n\t\t\t.name(`${args[1].actor.data.name} - Aeon Stone - ${stoneType}`)\n\t\t\t.extraEndDuration(3000)\n\t\t.play()\n} else if (args[0] == \"off\") {\n\tawait Sequencer.EffectManager.endEffects({ name: `${args[1].actor.data.name} - Aeon Stone - ${stoneType}`, object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_uokxor3emwq"}}}
{"_id":"CtkjmTtEYfMPbtm4","name":"Heal","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/heal.webp","scope":"global","command":"let diceNumber = args[0]._roll.terms[0].number\nlet caster = args[1].sourceToken\nlet spellTarget = Array.from(game.user.targets)[0]\nlet doNotTargetCaster = false\n\nconsole.log(args)\n\nlet d = new Dialog({\n    title: \"Heal\",\n    content: \"<p>How many actions are you using to cast Heal?</p>\",\n    buttons: {\n    one: {\n    icon: '<span class=\"pf2-icon\">1</span>',\n    label: \"One Action\",\n    callback: () => {\n        spellTarget = Array.from(game.user.targets)[0]\n        oneActionHeal()\n        }\n    },\n    two: {\n    icon: '<span class=\"pf2-icon\">2</span>',\n    label: \"Two Actions\",\n    callback: () => {\n        spellTarget = Array.from(game.user.targets)[0]\n        twoActionHeal()\n        }\n    },\n    three:{\n    icon: `<span class=\"pf2-icon\">3</span>`,\n    label: \"Three Actions\",\n    callback: () => {\n        d3.render(true)\n        }\n    }\n    },\n    default: \"Two Actions\"\n})\n\nlet d3 = new Dialog({\n    title: \"Heal\",\n    content: `<p>Do you want to target yourself?</p>`,\n    buttons: {\n    one: {\n    label: \"Yes\",\n    callback: () => {\n        doNotTargetCaster = false\n        threeActionHeal()\n        }\n    },\n    two: {\n    label: \"No\",\n    callback: () => {\n        doNotTargetCaster = true\n        threeActionHeal()\n        }\n    }\n    },\n    default: \"No\"\n})\n\nmain()\n\nfunction main(){\n    if(caster != undefined){\n        d.render(true);\n    }else{\n        ui.notifications.error(`You must select the token of the caster!`)\n        return;\n    }    \n}\n\n//Defining unique behavior for each kind of effect\n\n\nfunction oneActionHeal(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) < 7.5){\n            console.log(\"Close enough to touch!\")\n            // checks whether the target is undead or not\n            oneActionHealAnimation()\n        }else{\n            console.log(`Too far to touch!`); \n            ui.notifications.error(`Your target is further than touch distance away! Try again.`);\n            return;\n        }    \n}\n\nfunction twoActionHeal(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) <= 30){\n        console.log(\"Within 30 feet!\")\n        // checks whether the target is undead or not\n        twoActionHealAnimation()\n    }else{\n        console.log(`Farther than 30 feet!`); \n        ui.notifications.error(`Your target is further than 30 feet away! Try again.`);\n        return;\n    }\n}\n\nfunction threeActionHeal(){\n    //divide up all tokens within range into an array for living and an array for undead\n    let tokensOnMap = Array.from(canvas.tokens.placeables)\n    let tokensInRange = tokensOnMap.filter(distance => canvas.grid.measureDistance(distance,caster)<=30)\n    let tokenTraitsInRange = tokensInRange.map(x => x.actor.traits)\n    let undeadTokensInRange = []\n    let livingTokensInRange = []\n    for(let i=0;i<tokensInRange.length;i++){\n        if(Array.from(tokenTraitsInRange[i]).includes(`undead`)||Array.from(tokenTraitsInRange[i]).includes(`dhampir`)){\n            undeadTokensInRange.push(tokensInRange[i])\n        }else if(!Array.from(tokenTraitsInRange[i]).includes(`undead`)&&!Array.from(tokenTraitsInRange[i]).includes(`construct`)&&!Array.from(tokenTraitsInRange[i]).includes(`dhampir`)){\n            if (doNotTargetCaster) {\n                if (!(caster === tokensInRange[i])) livingTokensInRange.push(tokensInRange[i])\n            } else livingTokensInRange.push(tokensInRange[i])\n        }\n    }\n    console.log(undeadTokensInRange)\n    console.log(livingTokensInRange)\n    new Sequence()\n        .effect()\n            .atLocation(caster)\n            .randomRotation()\n            .size(14, {gridUnits: true})\n            .file(\"jb2a.healing_generic.burst.greenorange\")\n            .waitUntilFinished(-1500)\n        .play()\n    for(let i=0;i<undeadTokensInRange.length;i++){\n        new Sequence(\"Damage Undead\")\n            .effect()\n                .atLocation(undeadTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.target.greenyellow\")\n            .play()\n    }\n    for(let i=0;i<livingTokensInRange.length;i++){\n        new Sequence(\"Heal living\")\n            .effect()\n                .atLocation(livingTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.healing_generic.200px.green\")\n            .play()\n    }\n}\n\n//Defining animations for each kind of effect\n    function oneActionHealAnimation(){\n        if(Array.from(spellTarget.actor.traits).includes(`undead`)){\n        //trigger energy strand from caster to target, then trigger healing burst on target\n        new Sequence(\"Damage undead\")\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.target.greenyellow\")\n            .play()\n        }else{\n        //trigger energy strand from caster to target, then trigger damaging burst on target\n        new Sequence(\"Heal living\")\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.healing_generic.200px.green\")\n            .effect()\n                .atLocation(spellTarget)\n                .scaleToObject()\n                .file(\"jb2a.toll_the_dead.purple.skull_smoke\")\n                .delay(500)\n            .play()\n        }\n    }\n    function twoActionHealAnimation(){\n        if(Array.from(spellTarget.actor.traits).includes(`undead`)){\n            //trigger energy strand from caster to target, then trigger healing burst on target\n            new Sequence(\"Damage undead\")    \n                .effect()\n                    .atLocation(caster)\n                    .stretchTo(spellTarget)\n                    .file(\"jb2a.energy_strands.range.standard.dark_purple\")\n                    .waitUntilFinished(-1000)\n                .effect()\n                    .atLocation(spellTarget)\n                    .randomRotation()\n                    .scaleToObject(1.25)\n                    .file(\"jb2a.divine_smite.target.greenyellow\")\n                .play()\n        }else{\n            //trigger energy strand from caster to target, then trigger damaging burst on target\n            new Sequence(\"Heal living\")    \n                .effect()\n                    .atLocation(caster)\n                    .stretchTo(spellTarget)\n                    .file(\"jb2a.energy_strands.range.standard.dark_green\")\n                    .waitUntilFinished(-1000)\n                .effect()\n                    .atLocation(spellTarget)\n                    .randomRotation()\n                    .scaleToObject(1.25)\n                    .file(\"jb2a.healing_generic.200px.green\")\n                .play()\n        }\n    }\n    function threeActionHealAnimation(){\n        \n    }","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"},"cf":{"id":"temp_6gsujam4gp6"}}}
{"_id":"Dlff2f5pPBnj7SlK","name":"Equipment Changes","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/equipment/chest/breastplate-collared-steel.webp","scope":"global","command":"// This macro triggers every time updateItem hook is triggered.\n// You can use this to say, create \"On Equip\" or \"On Invest\" effects.\nlet data = args[0].data\nlet changes = args[0].changes\n\nif (data.name.includes(\"Aeon Stone\")) {\n\tif ((changes.data.equipped.invested && data.isEquipped) || (data.isInvested && changes.data.equipped.carryType === \"worn\")) {\n\t    runJB2Apf2eMacro(\"Aeon Stone\", [\"on\", data])\n\t} else runJB2Apf2eMacro(\"Aeon Stone\", [\"off\", data])\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_uokxor3emwq"}}}
{"_id":"E1eKr1GPbMu11gDZ","name":"Token Borders","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/symbols/circle-ouroboros.webp","scope":"global","command":"// Apparently cannot scaleToObject in AA. So this exists. \n\nlet tokenD = args[1].sourceToken\nlet type = args[2][0] ?? args[1].itemName.replace(/Spell Effect|Effect|Greater|Lesser|Minor|Major|Moderate/g, \"\").toLowerCase().trim()\nlet tokenScale = Math.min(args[1].sourceToken.data.scale, 1)\n\nlet premAssets = [\"\"]\nlet freeAssets = [\"\"]\n\nlet assets = premAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nif (args[0] == \"on\") {\n    switch (type) {\n        case (\"mage armor\"): {\n            new Sequence()\n            .effect()\n                .file(\"jb2a.energy_field.02.above.blue\")\n                .attachTo(tokenD)\n                .scaleToObject(2 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n                .name(type)\n                .fadeIn(300)\n                .opacity(0.6)\n                .mask()\n                .fadeOut(300)\n            .effect()\n                .file(\"jb2a.energy_field.02.below.blue\")\n                .attachTo(tokenD)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .mask()\n                .persist(true, { persistTokenPrototype: true })\n                .belowTokens()\n                .name(type)\n                .fadeIn(300)\n                .fadeOut(300)\n            .play();\n            break;\n        }\n        case (\"magic weapon\"): {\n            new Sequence()\n            .effect()\n                .name(type)\n                .attachTo(tokenD)\n                .fadeIn(300)\n                .fadeOut(500)\n                .offset({ x: -0.3 * tokenScale }, { local: true, gridUnits: true })\n                .scaleToObject(2 * tokenScale)\n                .file(\"jb2a.spiritual_weapon\")\n            .play();\n            break;\n        }\n        case (\"shield\"): {\n            new Sequence()\n            .effect()\n                .file(\"jb2a.shield.01.intro.blue\")\n                .attachTo(tokenD)\n                .scaleToObject(1.5 * tokenScale)\n                .name(type)\n                .waitUntilFinished(-500)\n            .effect()\n                .file(\"jb2a.shield.01.loop.blue\")\n                .attachTo(tokenD)\n                .scaleToObject(1.5 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n                .name(type)\n                .fadeIn(300)\n                .fadeOut(300)\n                .extraEndDuration(800)\n            .play();\n            break;\n        }\n        case (\"raise a shield\"):\n        case (\"dueling parry\"): {\n            new Sequence()\n            .effect()\n                .name(type)\n                .attachTo(tokenD)\n                .scaleToObject(1.3 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n                .playbackRate(0.8)\n                .fadeIn(500)\n                .fadeOut(500)\n                .file(\"jb2a.shimmer.01\")\n            .play();\n            break;\n        }\n        case (\"quickened\"): {\n            new Sequence()\n            .effect()\n                .name(type)\n                .attachTo(tokenD)\n                .scaleToObject(2 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n                .fadeIn(500)\n                .fadeOut(500)\n                .file(\"jb2a.token_border.circle.static.blue.004\")\n            .play();\n            break;\n        }\n        case (\"drakeheart mutagen\"): {\n            new Sequence()\n            .effect()\n                .name(type)\n                .attachTo(tokenD)\n                .scaleToObject(1.4 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n                .fadeIn(500)\n                .fadeOut(500)\n                .file(\"jb2a.shield_themed.above.molten_earth.01.orange\")\n            .effect()\n                .name(type)\n                .attachTo(tokenD)\n                .scaleToObject(1.4 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n                .fadeIn(500)\n                .fadeOut(500)\n                .belowTokens()\n                .file(\"jb2a.shield_themed.below.molten_earth.01.orange\")\n            .play();\n            break;\n        }\n        default: ui.notifications.error(`Can't find animation for ${type}. Maybe unimplemented?`)\n    }\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ name: type, object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"IaIxaOh0D7roiQz1","name":"Protective Ward","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/protective-ward.webp","scope":"global","command":"let caster = args[1].sourceToken\n\nlet auraEffectRadius = caster.actor.items.filter(x => x.name.includes(\"Aura: Protective Ward\"))[0].data.data.rules[0].radius\n\nauraEffectRadius = 2 + (auraEffectRadius / 5) * 3\n\nif (args[0] == \"on\") {\n    new Sequence(\"PF2e x JB2A Macros\")\n        .effect()\n            .file(\"jb2a.shield.02.intro.yellow\")\n            .atLocation(caster)\n            .attachTo(caster)\n            .origin(\"Protective Ward\")\n            .name(\"Protective Ward\")\n            .size(auraEffectRadius, { gridUnits: true })\n            .waitUntilFinished(-500)\n        .effect()\n            .file(\"jb2a.shield.02.loop.yellow\")\n            .atLocation(caster)\n            .persist(true, { persistTokenPrototype: true })\n            .attachTo(caster)\n            .fadeOut(700)\n            .fadeIn(1000)\n            .origin(\"Protective Ward\")\n            .name(\"Protective Ward\")\n            .size(auraEffectRadius, { gridUnits: true })\n            .waitUntilFinished(-600)\n        .effect()\n            .file(\"jb2a.shield.02.outro_explode.yellow\")\n            .atLocation(caster)\n            .attachTo(caster)\n            .origin(\"Protective Ward\")\n            .name(\"Protective Ward\")\n            .size(auraEffectRadius, { gridUnits: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"Protective Ward\", source: caster })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_o2l5kjd1mwj"}}}
{"_id":"JM7aQZeP0zMbbHyw","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_6gsujam4gp6","name":"Multiple Functions","color":"#423a7e","fontColor":"#FFFFFF","icon":"icons/svg/daze.svg","sorting":"m","contents":["wMO4oKv5NQ6GkYAq","blSU13HzwUtDVjJZ","lmKZBrfclq8V6sJI","kz6IN257FJ58SgmE","CtkjmTtEYfMPbtm4","lkQvlxkMpsbLwwx5"],"children":[],"folderPath":[],"version":"2.4.7"}}}
{"_id":"JVtjNvoMoxsfddd7","name":"Illusory Disguise","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/illusory-disguise.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Rebuilt by: MrVauxs#8622\n// Can be used as a standalone!\n\nlet tokenD = args[1]?.sourceToken ?? canvas.tokens.controlled[0];\n\nif (!args.length) {\n    args = [\"off\"]\n    if (!Sequencer.EffectManager.getEffects({ origin: \"Humanoid Form\", object: tokenD }).length) { args = [\"on\"]}\n}\n\nif (args[0] == \"on\") {\n    let tokenName = tokenD.name.toLowerCase().split(\"\").reverse().join(\"\")\n    tokenName = tokenName[0].toUpperCase() + tokenName.slice(1)\n\n    let disguiseDefault = [tokenName, tokenD.data.img, tokenD.data.scale, false]\n\n    if (Array.from(game.user.targets).length) {\n        disguiseDefault = [Array.from(game.user.targets)[0].name, Array.from(game.user.targets)[0].data.img, Array.from(game.user.targets)[0].data.scale]\n    }\n    \n    let disguise = await warpgate.dialog([\n        {\n            type: 'text',\n            label: `ðŸŽ© Name`,\n            options: `${disguiseDefault[0]}`\n        },\n        {\n            type: 'text',\n            label: `âœ¨ Token Image <u style=\"cursor: help;\" title=\"Make sure it works on the scene, CORS is a fickle god.\">URL</u>`,\n            options: `${disguiseDefault[1]}`\n        },\n        {\n            type: 'text',\n            label: `ðŸ“· <u style=\"cursor: help;\" title=\"In case the token you are going into is a pop-out token. Or is smaller than you!\">Token Scale</u>`,\n            options: `${disguiseDefault[2]}`\n        },\n        {\n            type: 'checkbox',\n            label: `Turn your original token <u style=\"cursor: help;\" title=\"Enabled by default, this hides the token under the disguise. Useful for disguising into a smaller or a top-down token.\">invisible</u>?`,\n            options: true,\n            value: true\n        },\n    ],\n    \"ðŸŽ­Illusory DisguiseðŸŽ­\",\n    \"Cast!\")\n\n    if (!disguise) return;\n\n    if (args.length === 1) ui.notifications.info(\"PF2e x JB2A Macros | You are not using the Active Effect version of this spell, thus requiring you to remove the effect by going into the <i class='fas fa-film'></i> Sequencer Effect Manager.\");\n\n    // No funny business with empty inputs.\n    disguise = disguise.map((x, index) => x.length === 0 ? disguiseDefault[index] : x)\n   \n    console.log(`Transformed ${tokenD.name} into ${disguise[0]} with ${disguise[1]} image with scale of ${disguise[2]}.${disguise[3] ? \"The original token has been turned invisible.\" : \"\"}`)\n\n    new Sequence()\n        .effect()\n            .file(\"jb2a.markers.circle_of_stars.blue\")\n            .atLocation(tokenD)\n            .delay(200)\n            .duration(8000)\n            .fadeIn(500)\n            .fadeOut(7500)\n            .scaleToObject(1.3 * Math.min(tokenD.data.scale, 1))\n            .attachTo(tokenD)\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 60000 })\n            .zIndex(1)\n        .effect()\n            .file(\"jb2a.sneak_attack.blue\")\n            .atLocation(tokenD)\n            .delay(200)\n            .scaleToObject(2 * Math.min(tokenD.data.scale, 1))\n            .attachTo(tokenD)\n            .playbackRate(1)\n            .zIndex(2)\n            .waitUntilFinished(-1000)\n        .animation()\n            .playIf(disguise[3])\n            .fadeOut(500)\n            .on(tokenD)\n        .effect()\n            .file(disguise[1])\n            .origin(\"Illusory Disguise\")\n            .name(\"Illusory Disguise\")\n            .scaleToObject(Number(disguise[2]))\n            .opacity(0.8)\n            .scaleIn(0, 200, { ease: \"easeOutCubic\" })\n            .attachTo(tokenD)\n            .persist(true, { persistTokenPrototype: true })\n            .fadeIn(760)\n            .fadeOut(2500)\n        .effect()\n            .file(\"jb2a.particles.outward.purple.02.03\")\n            .origin(\"Illusory Disguise\")\n            .name(\"Illusory Disguise - Particles\")\n            .delay(200)\n            .scaleToObject(1.5 * Math.min(1, Number(disguise[2])))\n            .zIndex(2)\n            .scaleIn(0, 200, { ease: \"easeOutCubic\" })\n            .attachTo(tokenD)\n            .persist(true, { persistTokenPrototype: true })\n            .fadeIn(760)\n            .fadeOut(2500)\n            .waitUntilFinished(-2500)\n        .animation()\n            .playIf(disguise[3])\n            .fadeIn(2500)\n            .on(tokenD)\n        .play();\n} else if (args[0] == \"off\") {\n    Sequencer.EffectManager.endEffects({ origin: \"Illusory Disguise\", object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.0fUIZ0XifYGrR9oY"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"KHYzBiPwMIY6WfYa","name":"Dancing Lights","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/light/explosion-star-glow-yellow.webp","scope":"global","command":"/* get the pixels equivalent to 5 feet */\nconst gridSquare = canvas.scene.data.size/(canvas.scene.data.gridDistance/5);\n\n/* we will be doing this a lot */\nconst tenFeet = gridSquare * 2;\n\n/* backwards since thats how pop do */\nconst placementOffsets = [\n    {x: -tenFeet}, \n    {y: tenFeet}, \n    {x: tenFeet},\n    {x: 0, y: 0}\n];\n\n/* pop the offsets off one at a time and mody 'location' by that much.\nRemember, this is a culmulative iteration */\nconst offset = (location) => {\n    if (!!placementOffsets.length) {\n        const offset = placementOffsets.pop();\n        location.x += offset.x ?? 0;\n        location.y += offset.y ?? 0;\n    }\n    console.log(\"1\")\n    new Sequence()\n        .effect()\n            .atLocation({\n                x: location.x - gridSquare, \n                y: location.y - gridSquare\n            })\n            .file(\"jb2a.template_circle.out_pulse.02.burst\")\n            .scaleToObject(2)\n            .fadeOut(500)\n        .play()\n}\n\n/* we need to offset the initial placement with pre\n * and subsequent duplicates with post\n */\nconst callbacks = {\n    pre: offset,\n    post: offset\n}\n\nconst config = {\n    interval: -1,\n    size: 3\n}\n\n/* Helper function to find and remove an array element by value */\nfunction findDelete(source, searchElement){\n    const index = source.indexOf(searchElement);\n    if (index > -1) {\n        source.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n\n/* Spawn in our lights with dimLight already set*/\nconst lightsIds = await warpgate.spawn(\"Dancing Light\", {}, callbacks, {duplicates:4, crosshairs:config});\n\n/* We are already dismissing the current actor, hence\n * this trigger firing. We need to now dismiss\n * the remianing 3 lights.\n */\nconst deleteOthers = async (eventData) => {\n    \n    /* whoever we are, we are already being deleted */\n    findDelete(lightsIds, eventData.actorData.token._id);\n    \n    for( const id of lightsIds ){\n        // @todo dismiss really should take an array of ids\n        new Sequence()\n            .effect()\n                .atLocation(id)\n                .file(\"jb2a.template_circle.out_pulse.02.burst\")\n                .scaleToObject(2)\n                .fadeOut(500)\n            .play()\n        await warpgate.dismiss(id, eventData.sceneId);\n    }\n}\n\n/* we only want our event to trigger when it involves\n * one of our just-spawned lightsIds\n */\nconst condition = (eventData) => {\n    return lightsIds.includes(eventData.actorData.token._id)\n}\n\n/* Set up a trigger for when one of our\n * lights is dismissed, all of them\n * get dismissed\n */\nwarpgate.event.trigger(warpgate.EVENT.DISMISS, deleteOthers, condition)","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"},"cf":{"id":"temp_xz48q3g0ej8"}}}
{"_id":"KXoNTv1YkjM3D9NI","name":"Soul Siphon","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/unholy/strike-body-explode-disintegrate.webp","scope":"global","command":"let token = args[1].sourceToken\nlet target = Array.from(game.user.targets)[0]\nnew Sequence()\n    .effect()\n        .atLocation(token)\n        .stretchTo(target)\n        .file(\"jb2a.energy_strands.range.standard.dark_green\")\n        .waitUntilFinished(-1500)\n    .effect()\n        .atLocation(target)\n        .stretchTo(token)\n        .file(\"jb2a.energy_strands.range.standard.dark_red\")\n        .waitUntilFinished(-1500)\n    .effect()\n        .randomRotation()\n        .scaleToObject(2)\n        .atLocation(token)\n        .file(\"jb2a.energy_strands.in.red.01.2\")\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_c76abfsyvz7"}}}
{"_id":"LxFkyULbmva8yGDm","name":"Bane","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/bane.webp","scope":"global","command":"let caster = args[1].sourceToken\n\nlet auraEffectRadius = caster.actor.items.filter(x => x.name.includes(\"Aura: Bane\"))[0].data.data.rules[0].radius\n\nauraEffectRadius = 1 + (auraEffectRadius / 5) * 3\n\nif (args[0] == \"on\") {\n    new Sequence(\"Bane\")\n        .effect()\n            .file(\"jb2a.bless.400px.intro.purple\")\n            .scaleIn(0, 1000, {ease: \"easeInBounce\"})\n            .atLocation(caster)\n            .attachTo(caster)\n            .waitUntilFinished(-500)\n            .name(\"Bane Intro\")\n            .origin(\"BaneAnim\")\n            .size(auraEffectRadius, { gridUnits: true })\n        .effect()\n            .file(\"jb2a.bless.400px.loop.purple\")\n            .atLocation(caster)\n            .fadeOut(500)\n            .persist(true, { persistTokenPrototype: true })\n            .attachTo(caster)\n            .belowTokens(true)\n            .origin(\"BaneAnim\")\n            .name(\"Bane\")\n            .scaleOut(0, 500, {ease: \"easeOutCubic\"})\n            .size(auraEffectRadius, { gridUnits: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"BaneAnim\", source: caster })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.eJJhPoLdv7ul62dc"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_o2l5kjd1mwj"}}}
{"_id":"O0RE17QySMEMVdHd","name":"Unleash Psyche","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/perception/eye-ringed-glow-angry-large-teal.webp","scope":"global","command":"let tokenD = args[1].sourceToken\nlet tokenScale = Math.min(args[1].sourceToken.data.scale, 1)\n\nlet premAssets = [\"jb2a.particles.outward.orange.01.03\", \"jb2a.token_border.circle.static.orange.012\"]\nlet freeAssets = [\"jb2a.particles.outward.greenyellow.01.03\", \"jb2a.token_border.circle.static.blue.007\"]\n\nlet assets = premAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nconst nameOfEffect = `${tokenD.name}'s Unleashed Psyche`\n\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .origin(\"Unleash Psyche\")\n            .name(nameOfEffect + \" - Explosion\")\n            .file(\"jb2a.thunderwave.center.blue\")\n            .attachTo(tokenD)\n            .filter(\"ColorMatrix\", { hue: 100 })\n            .scaleToObject(3.5 * tokenScale)\n            .waitUntilFinished(-900)\n        .effect()\n            .origin(\"Unleash Psyche\")\n            .name(nameOfEffect + \" - Particles\")\n            .file(\"jb2a.particles.inward.greenyellow.01.02\")\n            .attachTo(tokenD)\n            .fadeOut(1500)\n            .filter(\"ColorMatrix\", { hue: 250 })\n            .mask()\n            .scaleToObject(tokenScale)\n            .fadeIn(300)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .origin(\"Unleash Psyche\")\n            .name(nameOfEffect + \" - Particles\")\n            .file(\"jb2a.particles.swirl.greenyellow.01.01\")\n            .attachTo(tokenD)\n            .fadeOut(500)\n            .filter(\"ColorMatrix\", { hue: 250 })\n            .scaleToObject(1.7 * tokenScale)\n            .fadeIn(300)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .origin(\"Unleash Psyche\")\n            .name(nameOfEffect + \" - Token Border\")\n            .file(assets[1])\n            .atLocation(tokenD)\n            .attachTo(tokenD)\n            .opacity(0.6)\n            .fadeOut(3000)\n            .scaleToObject(2 * tokenScale)\n            .filter(\"ColorMatrix\", { hue: 250 })\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"Unleash Psyche\", object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"OOKf1Stu6m8HZNWA","name":"Scorching Ray","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/scorching-ray.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Rebuilt by: MrVauxs#8622\n// Can be used as a standalone!\n\nconst assets = game.modules.get(\"JB2A_DnD5e\")?.active\n    ? [\"jb2a.particles.outward.greenyellow.02.05\", { saturate: -1 }]\n    : [\"jb2a.particles.outward.orange.02.05\", {}];\n\nlet tokenD = args[1]?.sourceToken ?? canvas.tokens.controlled[0];\nlet targets = Array.from(game.user.targets);\n\nif (!token) { ui.notifications.error(\"No token found.\"); return; }\n\nlet targetDialogue = []\nlet rayCount = []\n\nif (game.system.id === \"pf2e\") {\n\tfor (let i of targets.keys()) {\n\t\trayCount.push(1)\n\t}\n} else {\n\ttargetDialogue.push({\n\t\ttype: 'info',\n\t\tlabel: `Up to 10 each.`,\n\t})\n\tfor (let i of targets.keys()) {\n\t\ttargetDialogue.push({\n\t\t\ttype: 'number',\n\t\t\tlabel: `Rays to ${targets[i].name}`,\n\t\t})\n\t}\n\trayCount = await warpgate.dialog(targetDialogue, \"ðŸ”¥Scorching RayðŸ”¥\", \"Cast!\")\n}\n\nrayCount = rayCount.filter(Number).map(x => Math.min(x, 10))\n\nrayCount.map((ray, index) => {\n\tlet target = targets[index]\n\n\tnew Sequence()\n\t\t.effect()\n\t\t\t.file(\"jb2a.magic_signs.circle.02.evocation.loop.yellow\")\n\t\t\t.attachTo(tokenD, { offset: { x: -0.5 }, gridUnits: true, local: true })\n\t\t\t.fadeIn(500)\n\t\t\t.fadeOut(500)\n\t\t\t.scaleToObject(2.25)\n\t\t\t.rotateTowards(target, {attachTo: true})\n\t\t\t.duration(5000)\n\t\t\t.scale({ x: 1, y: 2 })\n\t\t\t.rotateIn(360, 2000, {ease: \"easeInOutBack\"})\n\t\t\t.scaleOut(0.2, 2000, {ease: \"easeOutQuint\", delay: -4000})\n\t\t.effect()\n\t\t\t.filter(\"ColorMatrix\", assets[1])\n\t\t\t.file(assets[0])\n\t\t\t.attachTo(tokenD, { offset: { x: -0.5 }, gridUnits: true, local: true })\n\t\t\t.fadeIn(500)\n\t\t\t.fadeOut(500)\n\t\t\t.scaleToObject(2.25)\n\t\t\t.rotateTowards(target, {attachTo: true})\n\t\t\t.duration(5000)\n\t\t\t.scale({ x: 1, y: 2 })\n\t\t\t.rotateIn(360, 2000, {ease: \"easeInOutBack\"})\n\t\t\t.scaleOut(0.3, 2000, {ease: \"easeOutQuint\", delay: -4000})\n\t\t.wait(3000)\n\t\t.effect()\n\t\t\t.from(token)\n\t\t\t.filter(\"ColorMatrix\", { contrast: 1, saturate: 1 })\n\t\t\t.attachTo(token)\n\t\t\t.duration(1500 + Math.abs(ray) * 300)\n\t\t\t.fadeIn(500)\n\t\t\t.fadeOut(500)\n\t\t\t.opacity(0.3)\n\t\t\t.filter(\"Blur\", { blurX: 10, blurY: 20 })\n\t\t.effect()\n\t\t\t.file(\"jb2a.scorching_ray.orange\")\n\t\t\t.attachTo(tokenD, { offset: { x: 0.4 }, gridUnits: true, local: true })\n\t\t\t.stretchTo(target, {attachTo: true})\n\t\t\t.repeats(Math.abs(ray), 250, 250)\n\t\t\t.randomizeMirrorY()\n\t\t.wait(200)\n\t\t.effect()\n\t\t\t.from(target)\n\t\t\t.filter(\"ColorMatrix\", { contrast: 1, saturate: 1 })\n\t\t\t.attachTo(target)\n\t\t\t.duration(1500)\n\t\t\t.fadeIn(500)\n\t\t\t.fadeOut(500)\n\t\t\t.opacity(0.3)\n\t\t\t.filter(\"Blur\", { blurX: 10, blurY: 20 })\n\t\t\t.tint(\"#ffbd2e\")\n\t\t.play()\n})","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"pathfinder","system":"pf2e","coreVersion":"9.269","systemVersion":"3.13.5.16"},"core":{"sourceId":"Macro.jNwOrcCo8TgMz6bI"},"cf":{"id":"temp_7rg2mnzpvsh"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"3.13.6","coreVersion":"10.284","createdTime":null,"modifiedTime":1662242747571,"lastModifiedBy":"ynn7ZMgoRi8oPGYQ"}}
{"_id":"OOYnWts6o8nGdhC6","name":"Haunting Hymn","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/haunting-hymn.webp","scope":"global","command":"let token = args[1].sourceToken\nconst template = args[1].templateData;\nconst [templateX, templateY] = [template.data.x, template.data.y];\nnew Sequence()\n    .effect()\n        .file('jb2a.template_circle.out_pulse.01.burst')\n        .fadeIn(500)\n        .fadeOut(500)\n        .mask(template)\n        .atLocation(token)\n        .scale(1)\n        .randomRotation()\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_c76abfsyvz7"}}}
{"_id":"OtxjeBG0360JNVtE","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_o2l5kjd1mwj","name":"Auras","color":"#4f4f40","fontColor":"#FFFFFF","icon":"icons/svg/circle.svg","sorting":"m","contents":["IaIxaOh0D7roiQz1","LxFkyULbmva8yGDm","y2Hundr4PzbGNeys"],"children":[],"folderPath":["temp_s3arecn2xs"]}}}
{"_id":"PiernEW8sh3FaeG0","name":"Drain Bonded Item","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/defensive/shield-barrier-blades-teal.webp","scope":"global","command":"let tokenD = args[0].token;\nlet tokenScale = Math.min(args[1].sourceToken.data.scale, 1)\n\nlet premAssets = [\"jb2a.divine_smite.caster.greenyellow\", {}, \"jb2a.shimmer.01.green\"]\nlet freeAssets = [\"jb2a.divine_smite.caster.blueyellow\", { saturate: -1 }, \"jb2a.shimmer.01.blue\"]\n\nlet assets = freeAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nnew Sequence()\n    .effect()\n        .atLocation(tokenD)\n        .attachTo(tokenD)\n        .filter(\"ColorMatrix\", assets[1])\n        .scaleToObject(2)\n        .file(\"jb2a.energy_strands.in.green.01.1\")\n    .effect()\n        .atLocation(tokenD)\n        .attachTo(tokenD)\n        .scaleToObject(2)\n        .filter(\"ColorMatrix\", assets[1])\n        .file(assets[0])\n        .waitUntilFinished(300)\n    .effect()\n        .atLocation(tokenD)\n        .attachTo(tokenD)\n        .filter(\"ColorMatrix\", assets[1])\n        .scaleToObject(1.5)\n        .file(assets[2])\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":true},"core":{"sourceId":"Macro.0fUIZ0XifYGrR9oY"},"cf":{"id":"temp_xz48q3g0ej8"}}}
{"_id":"Q0hKSbLmADnVbKQB","name":"Persistent Conditions","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/wounds/blood-drip-droplet-red.webp","scope":"global","command":"let token = args[0].token\nlet type = /Received Fast Healing/g.test(args[0].data.flavor) ? \"healing\" : args[0].data.flags.persistent.damageType;\nlet color = \"jb2a.liquid.splash.red\"\nlet scale = 1.5\nlet below = false\n\nswitch (type.toLowerCase()) {\n    case \"piercing\":\n    case \"slashing\":\n    case \"bleed\": color = \"jb2a.liquid.splash.red\"; break;\n    case \"acid\": color = \"jb2a.liquid.splash.green\"; break;\n    case \"acid\": color = \"jb2a.liquid.splash.blue\"; break;\n    case \"bludgeoning\": below = true; scale = 2.5; color = \"jb2a.impact.ground_crack.blue.03\"; break;\n    case \"good\": color = \"jb2a.divine_smite.caster.yellowwhite\"; break;\n    case \"evil\": color = \"jb2a.divine_smite.caster.dark_red\"; break;\n    case \"lawful\": color = \"jb2a.divine_smite.caster.orange\"; break;\n    case \"chaotic\": color = \"jb2a.divine_smite.caster.purplepink\"; break;\n    case \"sonic\": color = \"jb2a.thunderwave.center.blue\"; break;\n    case \"electricity\": color = \"jb2a.lightning_strike.blue.0\"; break;\n    case \"cold\": scale = 2; color = \"jb2a.impact_themed.ice_shard.blue\"; break;\n    case \"force\": below = true; scale = 3; color = \"jb2a.impact.ground_crack.blue.01\"; break; \n    case \"mental\": color = \"jb2a.magic_signs.rune.enchantment.intro.purple\"; break; \n    case \"poison\": color = \"jb2a.icon.poison.dark_green\"; break; \n    case \"negative\": color = \"jb2a.healing_generic.200px.purple\"; break; \n    case \"positive\": color = \"jb2a.healing_generic.400px.yellow\"; break;\n    case \"healing\": color = \"jb2a.healing_generic.400px.green\"; break;\n    case \"fire\": return;\n    default: ui.notifications.error(`Can't find animation for ${type}`)\n}\n\nnew Sequence()\n    .effect()\n        .belowTokens(below)\n        .fadeIn(500)\n        .fadeOut(500)\n        .atLocation(token)\n        .scaleToObject(scale)\n        .file(color)\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.5PhqUehtnjxz35Gg"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_xz48q3g0ej8"}}}
{"_id":"R6ywhDd0CGrQkzr1","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_c76abfsyvz7","name":"Templates","color":"#436546","fontColor":"#FFFFFF","icon":"icons/svg/explosion.svg","sorting":"m","contents":["KXoNTv1YkjM3D9NI","j1cUixlhlZBbeM1r","OOYnWts6o8nGdhC6","pC8bqYNdqGeeUoWO"],"children":[]}}}
{"_id":"SaXHztUmj7Fh9G58","name":"Acid Flask","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/equipment/alchemical-items/alchemical-bombs/acid-flask.webp","scope":"global","command":"// Can be used standalone!\n\nlet tokenD = args[1]?.sourceToken ?? canvas.tokens.controlled[0]\nlet targets = args[1]?.allTargets ?? Array.from(game.user.targets)\nlet target = targets[0]\n\nif (!tokenD || !target) {\n    return ui.notifications.error(`Missing a ${!tokenD ? \"selected token\" : \"\"}${!tokenD && !target ? \" and \": \"\"}${!target ? \"target\" : \"\"}.`);\n}\n\nlet projectile = \"\"\nlet explosion = [\"\"]\nlet explosionRemains = [\"\"]\nlet seqe = new Sequence(\"PF2e x JB2A Macros\")\nlet splashBonus = 3\nlet mods = [{ \"label\": `No Modifications`, \"value\": 0 }]\nlet options\n\n// Special feats\n\nif (tokenD.actor.data.items.filter(x => x.name === \"Bomber\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.classfeatures\" data-id=\"7JbiaZ8bxODM5mzS\"><i class=\"fas fa-suitcase\"></i> Bomber</a>`, \"value\": \"Bomber\" });\nif (tokenD.actor.data.items.filter(x => x.name === \"Expanded Splash\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.feats-srd\" data-id=\"gyVcJfZTmBytLsXq\"><i class=\"fas fa-suitcase\"></i> Expanded Splash</a>`, \"value\": \"Expanded\" });\nif (tokenD.actor.data.items.filter(x => x.name === \"Directional Bombs\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.feats-srd\" data-id=\"ozvYhY4hG1deXly8\"><i class=\"fas fa-suitcase\"></i> Directional Bombs</a>`, \"value\": \"Directional\" });\n\nif (mods.length > 1) {\n    options = await warpgate.buttonDialog({buttons: mods}, 'column')\n}\n// check for Expanded Splash and Bomber's singular splash feature and add 3 to splashBonus\n\nseqe.effect()\n        .file(\"jb2a.throwable.throw.flask.03.green\")\n        .atLocation(tokenD)\n        .stretchTo(target)\n        .fadeIn(300)\n        .waitUntilFinished(-200)\n    .macro(\n        options == 'Directional' ? \"Compendium.pf2e-jb2a-macros.Macros.Cone Template\" : \"\",\n        target,\n        {},\n        [\n            \"jb2a.liquid.splash_side.bright_green\", \n            \"jb2a.explosion.side_fracture.flask.03\"\n        ]\n    )\n    .effect()\n        .playIf(options !== 'Directional')\n        .file(\"jb2a.liquid.splash.bright_green\")\n        .atLocation(target)\n        .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n    .effect()\n        .playIf(options !== 'Directional')\n        .file(\"jb2a.explosion.side_fracture.flask.03\")\n        .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n        .atLocation(target)\n        .rotate(180)\n        .rotateTowards(token)\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.GK9NCgnOnTYxdETf"},"cf":{"id":"temp_9hsvsxrbtvj"}}}
{"_id":"VVytkF4BupAKO3Oe","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_s3arecn2xs","name":"Active Effects","color":"#454545","fontColor":"#FFFFFF","icon":"icons/svg/aura.svg","sorting":"m","contents":["O0RE17QySMEMVdHd","E1eKr1GPbMu11gDZ","gU05Ao19uKUf5H2h","tItdi7rFVh3PEyKx","6yeZBx2HjHHrQIRp","ZxnGGJn7z4fbBfcq","XtFJjALF0A4VvgRn","JVtjNvoMoxsfddd7","nA5gqHtwwwsyOtih","XSlxNRM032wVYBBw","uCRBEs5o1lFVhRqT"],"children":["temp_o2l5kjd1mwj"],"folderPath":[],"version":"2.4.7"}}}
{"_id":"Vug9mAtV6Zne3G6K","name":"Bombs","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/fire/explosion-fireball-small-blue.webp","scope":"global","command":"if (!args.length) return;\n\nlet tokenD = args[1].sourceToken\nlet targets = args[1].allTargets\nlet target = targets[0]\nlet rinsedName = args[1].rinsedName.replace(/\\(.+\\)/g, \"\")\n\nlet projectile = \"\"\nlet explosion = [\"\"]\nlet explosionRemains = [\"\"]\nlet seq = new Sequence(\"PF2e x JB2A Macros\")\nlet splashBonus = 3\nlet mods = [{ \"label\": `No Modifications`, \"value\": 0 }]\nlet ID = Sequencer.Helpers.random_int_between(100, 999)\n\n// Special feats\n/*\nif (tokenD.actor.data.items.filter(x => x.name === \"Bomber\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.classfeatures\" data-id=\"7JbiaZ8bxODM5mzS\"><i class=\"fas fa-suitcase\"></i> Bomber</a>`, \"value\": \"Bomber\" })\nif (tokenD.actor.data.items.filter(x => x.name === \"Expanded Splash\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.feats-srd\" data-id=\"gyVcJfZTmBytLsXq\"><i class=\"fas fa-suitcase\"></i> Expanded Splash</a>`, \"value\": \"Expanded Splash\" })\nif (tokenD.actor.data.items.filter(x => x.name === \"Directional Bombs\").length) mods.push({ \"label\": `<a class=\"entity-link content-link\" data-pack=\"pf2e.feats-srd\" data-id=\"ozvYhY4hG1deXly8\"><i class=\"fas fa-suitcase\"></i> Directional Bombs</a>`, \"value\": \"Directional Bombs\" })\n\nif (falsemods.length > 1) {\n    let options = await warpgate.buttonDialog({buttons: mods}, 'column')\n}\n*/\n\nswitch (rinsedName) {\n    case \"vexingvapor\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.03.green\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: 120\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.03\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        .effect()\n            .file(\"jb2a.fog_cloud.2.green\")\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(3000)\n            .fadeOut(1500)\n            .duration(8000)\n            .opacity(0.5)\n            .filter(\"ColorMatrix\", {\n                hue: 200\n            })\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .wait(1000)\n        .effect()\n            .file(\"jb2a.markers.stun.purple.01\")\n            .fadeIn(3000)\n            .fadeOut(1500)\n            .duration(6500)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"tanglefootbag\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.grenade.02.blackyellow\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\")\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .duration(12000)\n            .scaleToObject(0.8)\n            .atLocation(target)\n            .belowTokens()\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\")\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .duration(12000)\n            .randomizeMirrorX()\n            .randomizeMirrorY()\n            .scale(0.1)\n            .atLocation(target, {randomOffset: 1 })\n            .attachTo(target)\n            .mask(target)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\")\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .randomizeMirrorX()\n            .randomizeMirrorY()\n            .duration(12000)\n            .scale(0.1)\n            .atLocation(target, {randomOffset: 1 })\n            .attachTo(target)\n            .mask(target)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\")\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .randomizeMirrorX()\n            .randomizeMirrorY()\n            .duration(12000)\n            .scale(0.1)\n            .atLocation(target, {randomOffset: 1 })\n            .attachTo(target)\n            .mask(target)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\")\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(1000)\n            .randomizeMirrorX()\n            .randomizeMirrorY()\n            .fadeOut(1000)\n            .duration(12000)\n            .scale(0.1)\n            .atLocation(target, {randomOffset: 1 })\n            .attachTo(target)\n            .mask(target)\n        break;\n    }\n    case \"sulfurbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.green\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: -30\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.fog_cloud.2.green\")\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(3000)\n            .fadeOut(1500)\n            .duration(8000)\n            .opacity(0.5)\n            .filter(\"ColorMatrix\", {\n                hue: -30\n            })\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"pernicioussporebomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.green\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.08.green\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n            .waitUntilFinished(-2500)\n        .effect()\n            .file(\"jb2a.spirit_guardians.green.particles\")\n            .fadeIn(500)\n            .fadeOut(500)\n            .duration(4000)\n            .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 75000})\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"necroticbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.black\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-150)\n        .effect()\n            .file(\"jb2a.explosion.03.bluewhite\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .wait(50)\n        .effect()\n            .file(\"jb2a.explosion.08.dark_green\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"mudbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.grenade.02.blackyellow\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.grease.dark_brown.loop\")\n            .size({ width: 3, height: 3 }, {gridUnits: true})\n            .scaleIn(0, 1000)\n            .fadeIn(1500)\n            .belowTokens()\n            .fadeOut(500)\n            .duration(4500)\n            .randomizeMirrorY()\n            .randomizeMirrorX()\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.grenade.02.black\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"junkbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.grenade.02.blackyellow\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.03.blueyellow\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.grenade.02.black\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"ghostcharge\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.grenade.03.blackblue\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.07.tealyellow\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.grenade.03.black\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        break;\n    }\n    case \"frostvial\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.02.blue\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.impact_themed.ice_shard.blue\")\n            .scale(0.5)\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.05.bluewhite\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.02\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        break;\n    }\n    case \"dreadampoule\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.03.green\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: 120\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .origin(\"Dread Ampoule ID\" + ID)\n            .name(\"Dread Ampoule - Fog\")\n            .file(\"jb2a.fog_cloud.2.green\")\n            .scaleIn(0.25, 1000, { ease: \"easeInQuart\" })\n            .fadeIn(3000)\n            .fadeOut(1500)\n            .duration(8000)\n            .opacity(0.5)\n            .filter(\"ColorMatrix\", {\n                hue: 200\n            })\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.03\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        .wait(1000)\n        .thenDo(function(){\n            for (let i = 0, iMax = 25; i <= iMax; i++) {\n                seq.effect()\n                    .origin(\"Dread Ampoule ID\" + ID)\n                    .name(`Dread Ampoule - Horror Effect ${i} / ${iMax}`)\n                    .fadeIn(1000)\n                    .fadeOut(1000)\n                    .scale(0.3)\n                    .animateProperty(\"sprite\", \"position.y\", { from: 0, to: -200, duration: 9000})\n                    .duration(3000)\n                    .file(\"jb2a.icon.horror.purple\")\n                    .atLocation(target, { randomOffset: 1.3 })\n                    .wait(200)\n            }\n        })\n        break;\n    }\n    case \"crystalshards\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.blue\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.04.blue\")\n            .zIndex(1)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n            .wait(50)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.bomb.01.blue\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .atLocation(target)\n            .zIndex(2)\n        break;\n    }\n    case \"bottledsunlight\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.02.blue\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                brightness: 1\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.markers.light.outro.yellow\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .fadeIn(1000)\n            .fadeOut(1000)\n            .scaleIn(0, 2000, { ease: \"easeOutBack\" })\n            .atLocation(target)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.02\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                brightness: 1\n            })\n            .rotateTowards(token)\n        break;\n    }\n    case \"bottledlightning\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.02.blue\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.02\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        .effect()\n            .file(\"jb2a.explosion.02.blue\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .waitUntilFinished(-1000)\n        .effect()\n            .file(\"jb2a.static_electricity.02.blue\")\n            .attachTo(target)\n            .duration(2500)\n            .scaleToObject(1.3 * Math.min(1, target.data.scale))\n        .effect()\n            .file(\"jb2a.static_electricity.03.blue\")\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n            .duration(1500)\n            .atLocation(target)\n        break;\n    }\n    case \"waterbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.blue\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.liquid.splash.blue\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .playIf(false) // WIP\n            .file(\"jb2a.liquid.splash_side.blue\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.03\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        break;\n    }\n    case \"acidflask\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.03.green\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.liquid.splash.bright_green\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .playIf(false) // WIP\n            .file(\"jb2a.liquid.splash_side.bright_green\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.03\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        break;\n    }\n    case \"alchemist'sfire\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.01.orange\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.01.orange\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.01\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .rotateTowards(token)\n        break;\n    }\n    case \"alignmentampoule\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.flask.02.blue\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                brightness: 1\n            })\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.bluewhite.3\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .file(\"jb2a.explosion.side_fracture.flask.02\")\n            .offset({ x: 0.5, y: 0.5 }, { gridUnits: true })\n            .atLocation(target)\n            .rotate(180)\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                brightness: 1\n            })\n            .rotateTowards(token)\n        break;\n    }\n    case \"redpitchbomb\":\n    case \"tallowbomb\": {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.black\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.01.orange\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .wait(50)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.bomb.01.black\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        break;\n    }\n    case \"thunderstone\": {\n        seq.effect()\n            .file(\"jb2a.slingshot\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-1000)\n        .effect()\n            .file(\"jb2a.thunderwave.center.blue\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        break;\n    }\n    default: {\n        seq.effect()\n            .file(\"jb2a.throwable.throw.bomb.01.black\")\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .fadeIn(300)\n            .waitUntilFinished(-200)\n        .effect()\n            .file(\"jb2a.explosion.shrapnel.bomb.01.black\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        .effect()\n            .file(\"jb2a.explosion.03.blueyellow\")\n            .atLocation(target)\n            .size({ width: 3.5, height: 3.5 }, {gridUnits: true})\n        break;\n    }\n}\n\nseq.play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Compendium.xdy-pf2e-workbench.asymonous-benefactor-macros-internal.u3dPC2egeK3IC26I"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_qfrxw4o5gm"}}}
{"_id":"XG6myvgJadegWTbF","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_qfrxw4o5gm","name":"Bombs","color":"#525252","fontColor":"#FFFFFF","icon":"systems/pf2e/icons/unidentified_item_icons/alchemical_bomb.webp","sorting":"m","contents":["Vug9mAtV6Zne3G6K"],"children":[],"folderPath":["temp_7rg2mnzpvsh"]}}}
{"_id":"XSlxNRM032wVYBBw","name":"Clumsy","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/movement/feet-winged-boots-brown.webp","scope":"global","command":"return // WIP\nlet token = args[1].sourceToken\nlet conditionOverhead = Sequencer.EffectManager.getEffects({ name: `${token.name} - Conditions Overhead*`, object: token })\n\nconsole.log(conditionOverhead)\n\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .name(`${token.name} - Conditions Overhead - Clumsy`)\n            .attachTo(token, {bindAlpha: false})\n            .from(token)\n            .loopProperty(\"spriteContainer\", \"rotation\", { values: [0, 5, 0, -5], duration: 2000, pingPong: true})\n            .persist()\n            .fadeOut(500)\n        .animation()\n            .on(token)\n            .fadeOut(100)\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence()\n        .animation()\n            .fadeIn(100)\n            .on(token)\n        .play()\n    await Sequencer.EffectManager.endEffects({ name: `${token.name} - Conditions Overhead - Clumsy`, object: token })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"XtFJjALF0A4VvgRn","name":"Invisibility","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/blind.svg","scope":"global","command":"let token = args[1].sourceToken\nif (args[0] == \"on\") {\n    new Sequence()\n        .animation()\n            .on(token)\n            .fadeOut(1000)\n        .effect()\n            .name(`${token.name} - Invisible`)\n            .file(\"jb2a.markers.circle_of_stars.blue\")\n            .fadeIn(1000)\n            .atLocation(token)\n            .mask()\n            .fadeOut(1000)\n            .scaleToObject(token.data.scale)\n            .attachTo(token, {bindAlpha: false, bindVisibility: false})\n            .persist()\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence()\n        .animation()\n            .on(token)\n            .fadeIn(1000)\n        .play();\n    await Sequencer.EffectManager.endEffects({ name: `${token.name} - Invisible`, object: token });\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.4kHSLUSKB3QkneWv"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"ZxnGGJn7z4fbBfcq","name":"Overdrive","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/features/feats/overdrive-success.webp","scope":"global","command":"let tokenD = args[1].sourceToken\nlet tokenScale = Math.min(args[1].sourceToken.data.scale, 1)\n\nlet premAssets = [\"jb2a.token_border.circle.static.blue.010\"]\nlet freeAssets = [\"jb2a.token_border.circle.static.blue.002\"]\n\nlet assets = premAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .file(\"jb2a.divine_smite.caster.blueyellow\")\n            .name(\"Overdrive\")\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                contrast: 1,\n                saturate: 0     \n            })\n            .tint(\"#7DF9FF\")\n            .attachTo(tokenD)\n            .scaleToObject(2 * tokenScale)\n            .waitUntilFinished(-1500)\n        .effect()\n            .playIf(args[1].itemName.includes(\"Critical\"))\n            .file(\"jb2a.static_electricity.03.blue\")\n            .name(\"Overdrive\")\n            .attachTo(tokenD)\n            .scaleToObject(1.5 * tokenScale)\n            .fadeOut(500)\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .file(assets[0])\n            .name(\"Overdrive\")\n            .attachTo(tokenD)\n            .fadeOut(500)\n            .scaleToObject(2 * tokenScale)\n            .fadeIn(700)\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ name: \"Overdrive\", object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"blSU13HzwUtDVjJZ","name":"Bardic Cantripry","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/sonic/scream-wail-shout-teal.webp","scope":"global","command":"let targets = args[1].hitTargets\nlet token = args[1].sourceToken;\nlet tokenScale = Math.min(token.data.scale, 1)\nlet spellName = args[1].itemName.replace(\"Spell Effect\", \"\").replace(/\\d rounds|\\(.+?\\)/g, \"\").toLowerCase().trim()\nconsole.log(spellName)\n\nif (typeof args[0] === \"string\") {\n    if (args[0] == \"on\") {\n        switch (spellName) {\n            case \"inspire courage\": {\n                new Sequence()\n                .effect()\n                    .file(\"jb2a.wind_stream.white\")\n                    .name(spellName)\n                    .attachTo(token)\n                    .scaleToObject(tokenScale)\n                    .rotate(90)\n                    .fadeOut(3000)\n                    .fadeIn(500)\n                    .opacity(1)\n                    .mask()\n                    .filter(\"ColorMatrix\", {saturate: 1})\n                    .tint(\"#FF0000\")\n                    .persist(true, { persistTokenPrototype: true })\n                .effect()\n                    .file(\"jb2a.token_border.circle.static.blue.001\")\n                    .name(spellName)\n                    .attachTo(token)\n                    .opacity(0.6)\n                    .fadeOut(3000)\n                    .fadeIn(500)\n                    .scaleToObject(2 * tokenScale)\n                    .filter(\"ColorMatrix\", {saturate: 1})\n                    .tint(\"#FF0000\")\n                    .persist(true, { persistTokenPrototype: true })\n                .play()\n                break;\n            }\n            case \"inspire defense\": {\n                let randomD = Sequencer.Helpers.random_int_between(0, 360)\n                new Sequence()\n                .effect()\n                    .file(\"jb2a.shield_themed.below.ice.01.blue\")\n                    .name(spellName)\n                    .belowTokens()\n                    .rotate(randomD)\n                    .attachTo(token)\n                    .fadeIn(3000)\n                    .fadeOut(3000)\n                    .scaleToObject(1.5 * tokenScale)\n                    .persist(true, { persistTokenPrototype: true })\n                .effect()\n                    .file(\"jb2a.shield_themed.above.ice.01.blue\")\n                    .name(spellName)\n                    .attachTo(token)\n                    .rotate(randomD)\n                    .fadeIn(3000)\n                    .fadeOut(3000)\n                    .scaleToObject(1.5 * tokenScale)\n                    .persist(true, { persistTokenPrototype: true })\n                .play()\n                break;\n            }\n        }\n    } else if (args[0] == \"off\") {\n        await Sequencer.EffectManager.endEffects({ name: spellName, object: token })\n    }\n} else {\n    let target = args[1].hitTargets[0] ?? args[1].sourceToken;\n\n    let songOfMarching = Sequencer.EffectManager.getEffects({ name: \"Song of Marching\", source: token })[0]\n    let dirgeOfDoom = Sequencer.EffectManager.getEffects({ name: \"Dirge of Doom\", source: token })[0]\n    if (songOfMarching || dirgeOfDoom) {\n        let menu = await warpgate.menu({\n            inputs: [{ type: 'info', label: `End ${songOfMarching ? \"Song of Marching\" : dirgeOfDoom ? \"Dirge of Doom\" : \"an unknown spell\"}?` },],\n            buttons: [{\n                label: 'End',\n                value: 1\n            }, {\n                label: 'Keep',\n                value: 2\n            }]\n        }, { title: \"Bard Cantrip\" })\n        if (menu.buttons === 1) {\n            Sequencer.EffectManager.endEffects({ name: `Bardic Cantrips - ${songOfMarching ? \"Song of Marching\" : dirgeOfDoom ? \"Dirge of Doom\" : \"*\"}`, source: token })\n        }\n    } else {\n        switch (spellName.toLowerCase()) {\n            case \"hymn of healing\": {\n                new Sequence()\n                    .effect()\n                    .atLocation(token)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.greenorange\")\n                    .waitUntilFinished(-1000)\n                    .effect()\n                    .atLocation(target)\n                    .scaleToObject(1.5)\n                    .file(\"jb2a.healing_generic.400px.green\")\n                    .play()\n                break;\n            }\n            case \"inspire competence\": {\n                new Sequence()\n                    .effect()\n                    .atLocation(token)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.pink\")\n                    .effect()\n                    .atLocation(target)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.pink\")\n                    .play()\n                break;\n            }\n            case \"inspire courage\": {\n                let seq = new Sequence()\n                    .effect()\n                    .atLocation(token)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.dark_red\")\n                targets.forEach((element, index) => {\n                    seq.effect()\n                        .atLocation(targets[index])\n                        .scaleToObject(1.5)\n                        .file(\"jb2a.divine_smite.caster.blueyellow\")\n                })\n                seq.play()\n                break;\n            }\n            case \"inspire defense\": {\n                let seq = new Sequence()\n                    .effect()\n                    .atLocation(token)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.blueyellow\")\n                targets.forEach((element, index) => {\n                    seq.effect()\n                        .atLocation(targets[index])\n                        .scaleToObject(1.5)\n                        .file(\"jb2a.divine_smite.caster.blueyellow\")\n                })\n                seq.play()\n                break;\n            }\n            case \"allegro\": {\n                new Sequence()\n                    .effect()\n                    .atLocation(token)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.blueyellow\")\n                    .effect()\n                    .atLocation(target)\n                    .scaleToObject(1.5)\n                    .file(\"jb2a.divine_smite.caster.blueyellow\")\n                    .play()\n                break;\n            }\n            case \"song of marching\": {\n                new Sequence()\n                    .effect()\n                    .atLocation(token)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.greenorange\")\n                    .effect()\n                    .atLocation(token)\n                    .attachTo(token)\n                    .belowTokens()\n                    .size({ width: 3, height: 3 }, { gridUnits: true })\n                    .scaleIn(0, 1000)\n                    .rotateIn(180, 1000)\n                    .scaleOut(0, 1000)\n                    .rotateOut(180, 1000)\n                    .persist()\n                    .opacity(0.5)\n                    .persist()\n                    .name(\"Bardic Cantrips - Song of Marching\")\n                    .file(\"jb2a.markers.music.greenorange\")\n                    .play()\n                ui.notifications.info(\"Persistent Effect created, once you don't want it playing you can remove it in <i class=\\\"fas fa-film\\\"></i> Sequencers Effect Manager.\")\n                break;\n            }\n            case \"dirge of doom\": {\n                new Sequence()\n                    .effect()\n                    .atLocation(token)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.dark_red\")\n                    .effect()\n                    .atLocation(token)\n                    .attachTo(token)\n                    .belowTokens()\n                    .size({ width: 15, height: 15 }, { gridUnits: true })\n                    .scaleIn(0, 1000)\n                    .scaleOut(0, 1000)\n                    .fadeIn(900)\n                    .fadeOut(900)\n                    .persist()\n                    .opacity(0.5)\n                    .persist()\n                    .name(\"Bardic Cantrips - Dirge of Doom\")\n                    .file(\"jb2a.spirit_guardians.dark_red.ring\")\n                    .effect()\n                    .atLocation(token)\n                    .attachTo(token)\n                    .belowTokens()\n                    .persist()\n                    .scaleToObject(3)\n                    .noLoop(true)\n                    .scaleOut(0, 600)\n                    .loopProperty(\"sprite\", \"rotation\", { from: 0, to: 360, duration: 6000 })\n                    .endTime(600)\n                    .name(\"Bardic Cantrips - Dirge of Doom\")\n                    .file(\"jb2a.divine_smite.caster.dark_red\")\n                    .play()\n                ui.notifications.info(\"Persistent Effect created, once you don't want it playing you can remove it in <i class=\\\"fas fa-film\\\"></i> Sequencers Effect Manager.\")\n                break;\n            }\n            case \"song of strength\": {\n                let seq = new Sequence()\n                    .effect()\n                    .atLocation(token)\n                    .scaleToObject(2)\n                    .file(\"jb2a.bardic_inspiration.greenorange\")\n                targets.forEach((element, index) => {\n                    seq.effect()\n                        .atLocation(targets[index])\n                        .scaleToObject(1.5)\n                        .file(\"jb2a.divine_smite.caster.greenyellow\")\n                })\n                seq.play()\n                break;\n            }\n            default: console.log(`Can't find \"${spellName}\", probably unimplemented!`)\n        }\n    }\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.JX5DMXhKxzDOjyRw"},"cf":{"id":"temp_6gsujam4gp6"}}}
{"_id":"eF8VdNDiF0y5E7kR","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_c76abfsyvz7","name":"Templates","color":"#3f4a40","fontColor":"#FFFFFF","icon":"icons/svg/explosion.svg","sorting":"m","contents":["pC8bqYNdqGeeUoWO","OOYnWts6o8nGdhC6","j1cUixlhlZBbeM1r","KXoNTv1YkjM3D9NI"],"children":[],"folderPath":[],"version":"2.4.7"}}}
{"_id":"fCFQjzbgASICMVb3","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_6gsujam4gp6","name":"Multiple Functions","color":"#5f5353","fontColor":"#FFFFFF","icon":"icons/svg/daze.svg","sorting":"m","contents":["blSU13HzwUtDVjJZ","lmKZBrfclq8V6sJI","lkQvlxkMpsbLwwx5","wMO4oKv5NQ6GkYAq","CtkjmTtEYfMPbtm4","kz6IN257FJ58SgmE"],"children":[],"folderPath":[],"version":"2.4.7"}}}
{"_id":"gDoZB0nbuJanr3t8","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_xz48q3g0ej8","name":"Non-Attacks / Utility","color":"#7c4f7d","fontColor":"#FFFFFF","icon":"icons/svg/card-hand.svg","sorting":"m","contents":["PiernEW8sh3FaeG0","KHYzBiPwMIY6WfYa","Q0hKSbLmADnVbKQB","7nrt0AppNUZDPmYk"],"children":[]}}}
{"_id":"gU05Ao19uKUf5H2h","name":"Rage","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/wounds/injury-face-impact-orange.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n\nconsole.log(args)\n\nlet tokenD = args[1].sourceToken\nlet tokenScale = Math.min(args[1].sourceToken.data.scale, 1)\n\nlet premAssets = [\"jb2a.particles.outward.orange.01.03\", \"jb2a.token_border.circle.static.orange.012\"]\nlet freeAssets = [\"jb2a.particles.outward.greenyellow.01.03\", \"jb2a.token_border.circle.static.blue.007\"]\n\nlet assets = premAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .file(\"jb2a.extras.tmfx.outpulse.circle.02.normal\")\n            .atLocation(tokenD)\n            .size(4, {gridUnits: true})\n            .opacity(0.25)\n        .effect()\n            .file(\"jb2a.impact.ground_crack.orange.01\")\n            .atLocation(tokenD)\n            .belowTokens()\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .size(3.5, {gridUnits: true})\n            .zIndex(1)\n        .effect()\n            .file(\"jb2a.impact.ground_crack.still_frame.01\")\n            .atLocation(tokenD)\n            .belowTokens()\n            .fadeIn(2000)\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .size(3.5, {gridUnits: true})\n            .fadeOut(20000)\n            .zIndex(0)\n        .effect()\n            .file(\"jb2a.wind_stream.white\")\n            .atLocation(tokenD)\n            .offset({y:75})\n            .size(1.75, {gridUnits: true})\n            .rotate(90)\n            .opacity(0.9)\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .loopProperty(\"sprite\", \"position.y\", { from: -5, to: 5, duration: 50, pingPong: true})\n            .duration(8000)\n            .fadeOut(3000)\n        .effect()\n            .file(assets[0])\n            .atLocation(tokenD)\n            .scaleToObject(2.5)\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .opacity(1)\n            .fadeIn(200)\n            .tint(assets === freeAssets ? \"#FF0000\" : \"\")\n            .fadeOut(3000)\n            .loopProperty(\"sprite\", \"position.x\", { from: -5, to: 5, duration: 50, pingPong: true})\n            .animateProperty(\"sprite\", \"position.y\", { from: 0, to: -100, duration: 6000, pingPong: true, delay:2000})\n            .duration(8000)\n        .effect()\n            .file(\"jb2a.wind_stream.white\")\n            .atLocation(tokenD)\n            .name(\"Rage\")\n            .attachTo(tokenD)\n            .scaleToObject(tokenScale)\n            .rotate(90)\n            .fadeOut(3000)\n            .opacity(1)\n            .mask()\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .persist(true, { persistTokenPrototype: true })\n        .effect()\n            .file(assets[1])\n            .atLocation(tokenD)\n            .name(\"Rage\")\n            .attachTo(tokenD)\n            .opacity(0.6)\n            .fadeOut(3000)\n            .scaleToObject(2 * tokenScale)\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .persist(true, { persistTokenPrototype: true })\n        .play()\n\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ name: \"Rage\", object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.hqr7muUDzlQbaZfg"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"iUD1DevEIfAXZpzc","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_uokxor3emwq","name":"Equipment Changes","color":"#4e4a13","fontColor":"#FFFFFF","icon":"icons/svg/chest.svg","sorting":"m","contents":["8M1lDOo679Hsj80q","Dlff2f5pPBnj7SlK"],"children":[]}}}
{"_id":"j1cUixlhlZBbeM1r","name":"Lightning Bolt","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/lightning-bolt.webp","scope":"global","command":"// Original Author: EskieMoh#2969\n// Rebuilt by: MrVauxs#8622\n// Can be used as a standalone! Requires a pre-placed template.\n\nlet tokenD = args[1]?.sourceToken ?? canvas.tokens.controlled[0];\nif (!tokenD) { ui.notifications.error(\"No token found.\"); return; }\n\nlet tokenScale = Math.min(tokenD.scale.x, 1)\n\nconst template = canvas.templates.placeables[canvas.templates.placeables.length - 1];\nnew Sequence()\n    .effect()\n        .file(\"jb2a.divine_smite.caster.blueyellow\")\n        .filter(\"ColorMatrix\", {\n            hue: 100,\n            contrast: 1,\n            saturate: 0     \n        })\n        .tint(\"#7DF9FF\")\n        .attachTo(tokenD)\n        .scaleToObject(2 * tokenScale)\n        .zIndex(2)\n        .waitUntilFinished(-500)\n    .effect()\n        .file(\"jb2a.static_electricity.03.blue\")\n        .attachTo(tokenD)\n        .scaleToObject(1.5 * tokenScale)\n        .fadeOut(500)\n        .repeats(2, 4000, 4000)\n    .effect()\n        .file(\"jb2a.lightning_ball.blue\")\n        .atLocation(tokenD)\n        .fadeOut(500)\n        .duration(3000)\n        .scaleToObject(1.1)\n        .center()\n        .animateProperty(\"spriteContainer\", \"position.x\", { from: 0, to: 0.32, duration: 1000, delay: 500, gridUnits: true, ease: \"easeOutBack\" })\n        .rotateTowards(template, {cacheLocation: true})\n        .zIndex(1)\n        .waitUntilFinished(-1000)\n    .effect()\n        .file(\"jb2a.lightning_ball.blue\")\n        .atLocation(tokenD)\n        .fadeIn(500)\n        .fadeOut(500)\n        .anchor({x:0.2})\n        .duration(3000)\n        .scaleToObject(1.1)\n        .rotateTowards(template, {cacheLocation: true})\n        .zIndex(4)\n    .wait(2000)\n    .effect()\n        .file(\"jb2a.impact.011.blue\")\n        .atLocation(token) \n        .anchor({x:0.15})\n        .scaleToObject(1.1) \n        .rotateTowards(template, {cacheLocation: true})\n        .zIndex(3)\n    .effect()\n        .file(\"jb2a.lightning_bolt.wide.blue\")\n        .atLocation(template.position, {cacheLocation: true})\n        .scale(0.45)\n        .stretchTo(template, {onlyX: true, tiling: true, cacheLocation: true})\n        .zIndex(3)\n    .play();","folder":null,"sort":0,"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.0fUIZ0XifYGrR9oY"},"cf":{"id":"temp_c76abfsyvz7"}},"ownership":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"_stats":{"systemId":"pf2e","systemVersion":"4.0.0-alpha1","coreVersion":"10.284","createdTime":null,"modifiedTime":1662408576707,"lastModifiedBy":"ynn7ZMgoRi8oPGYQ"}}
{"_id":"kz6IN257FJ58SgmE","name":"Harm","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/harm.webp","scope":"global","command":"let diceNumber = args[0]._roll.terms[0].number\nlet caster = args[1].sourceToken\nlet spellTarget = Array.from(game.user.targets)[0]\nlet doNotTargetCaster = false\n\nlet d = new Dialog({\n    title: \"Harm\",\n    content: \"<p>How many actions are you using to cast Harm?</p>\",\n    buttons: {\n    one: {\n    icon: '<span class=\"pf2-icon\">1</span>',\n    label: \"One Action\",\n    callback: () => {\n        spellTarget = Array.from(game.user.targets)[0]\n        oneActionHarm()\n        }\n    },\n    two: {\n    icon: '<span class=\"pf2-icon\">2</span>',\n    label: \"Two Actions\",\n    callback: () => {\n        spellTarget = Array.from(game.user.targets)[0]\n        twoActionHarm()\n        }\n    },\n    three:{\n    icon: `<span class=\"pf2-icon\">3</span>`,\n    label: \"Three Actions\",\n    callback: () => {\n        d3.render(true);\n        }\n    }\n    },\n    default: \"Two Actions\"\n})\n\nlet d3 = new Dialog({\n    title: \"Harm\",\n    content: `<p>Do you want to target yourself?</p>`,\n    buttons: {\n    one: {\n    label: \"Yes\",\n    callback: () => {\n        doNotTargetCaster = false\n        threeActionHarm()\n        }\n    },\n    two: {\n    label: \"No\",\n    callback: () => {\n        doNotTargetCaster = true\n        threeActionHarm()\n        }\n    }\n    },\n    default: \"No\"\n})\n\n\nmain()\n\nfunction main(){\n    if(caster != undefined){\n        d.render(true);\n    }else{\n        ui.notifications.error(`You must select the token of the caster!`)\n        return;\n    }    \n}\n\n//Defining unique behavior for each kind of effect\n\n\nfunction oneActionHarm(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) < 7.5){\n            console.log(\"Close enough to touch!\")\n            // checks whether the target is undead or not\n            oneActionHarmAnimation()\n        }else{\n            console.log(`Too far to touch!`); \n            ui.notifications.error(`Your target is further than touch distance away! Try again.`);\n            return;\n        }    \n}\n\nfunction twoActionHarm(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) <= 30){\n        console.log(\"Within 30 feet!\")\n        // checks whether the target is undead or not\n        twoActionHarmAnimation()\n    }else{\n        console.log(`Farther than 30 feet!`); \n        ui.notifications.error(`Your target is further than 30 feet away! Try again.`);\n        return;\n    }\n}\n\nfunction threeActionHarm(){\n    //divide up all tokens within range into an array for living and an array for undead\n    let tokensOnMap = Array.from(canvas.tokens.placeables)\n    let tokensInRange = tokensOnMap.filter(distance => canvas.grid.measureDistance(distance,caster)<=30)\n    let tokenTraitsInRange = tokensInRange.map(x => x.actor.traits)\n    let undeadTokensInRange = []\n    let livingTokensInRange = []\n    for(let i=0;i<tokensInRange.length;i++){\n        if(Array.from(tokenTraitsInRange[i]).includes(`undead`)){\n            undeadTokensInRange.push(tokensInRange[i])\n        }else if(!Array.from(tokenTraitsInRange[i]).includes(`undead`) && !Array.from(tokenTraitsInRange[i]).includes(`construct`)){\n            if (doNotTargetCaster) {\n                if (!(caster === tokensInRange[i])) livingTokensInRange.push(tokensInRange[i])\n            } else livingTokensInRange.push(tokensInRange[i])\n  \n        }\n    }\n    console.log(undeadTokensInRange)\n    console.log(livingTokensInRange)\n    new Sequence()\n        .effect()\n            .atLocation(caster)\n            .randomRotation()\n            .size(15, {gridUnits: true})\n            .file(\"jb2a.healing_generic.burst.purplepink\")\n            .waitUntilFinished(-1500)\n        .play()\n    for(let i=0;i<undeadTokensInRange.length;i++){\n        new Sequence(\"Heal Undead\")\n            .effect()\n                .atLocation(undeadTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.5)\n                .file(\"jb2a.cure_wounds.400px.purple\")\n            .play()\n    }\n    for(let i=0;i<livingTokensInRange.length;i++){\n        new Sequence(\"Harm living\")\n            .effect()\n                .atLocation(livingTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.caster.dark_purple\")\n            .effect()\n                .atLocation(livingTokensInRange[i])\n                .scaleToObject()\n                .file(\"jb2a.toll_the_dead.purple.skull_smoke\")\n                .delay(500)\n            .play()\n    }\n}\n\n//Defining animations for each kind of effect\n    function oneActionHarmAnimation(){\n        if(Array.from(spellTarget.actor.traits).includes(`undead`)){\n        //trigger energy strand from caster to target, then trigger healing burst on target\n        new Sequence(\"Heal undead\")\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.cure_wounds.400px.purple\")\n            .play()\n        }else{\n        //trigger energy strand from caster to target, then trigger damaging burst on target\n        new Sequence(\"Harm living\")\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.caster.dark_purple\")\n            .effect()\n                .atLocation(spellTarget)\n                .scaleToObject()\n                .file(\"jb2a.toll_the_dead.purple.skull_smoke\")\n                .delay(500)\n            .play()\n        }\n    }\n    function twoActionHarmAnimation(){\n        if(Array.from(spellTarget.actor.traits).includes(`undead`)){\n            //trigger energy strand from caster to target, then trigger healing burst on target\n            new Sequence(\"Heal undead\")    \n                .effect()\n                    .atLocation(caster)\n                    .stretchTo(spellTarget)\n                    .file(\"jb2a.energy_strands.range.standard.dark_purple\")\n                    .waitUntilFinished(-1000)\n                .effect()\n                    .atLocation(spellTarget)\n                    .randomRotation()\n                    .scaleToObject(1.25)\n                    .file(\"jb2a.cure_wounds.400px.purple\")\n                .play()\n        }else{\n            //trigger energy strand from caster to target, then trigger damaging burst on target\n            new Sequence(\"Harm living\")    \n                .effect()\n                    .atLocation(caster)\n                    .stretchTo(spellTarget)\n                    .file(\"jb2a.energy_strands.range.standard.dark_purple\")\n                    .waitUntilFinished(-1000)\n                .effect()\n                    .atLocation(spellTarget)\n                    .randomRotation()\n                    .scaleToObject(1.25)\n                    .file(\"jb2a.divine_smite.caster.dark_purple\")\n                .effect()\n                    .atLocation(spellTarget)\n                    .scaleToObject()\n                    .file(\"jb2a.toll_the_dead.purple.skull_smoke\")\n                    .delay(500)\n                .play()\n        }\n    }\n    function threeActionHarmAnimation(){\n        \n    }","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.OHxEXANJvgNk9uTU"},"cf":{"id":"temp_6gsujam4gp6"}}}
{"_id":"lToy5mQpBkIAZaGw","name":"#[CF_tempEntity]","type":"chat","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"cf":{"id":"temp_7rg2mnzpvsh","name":"Attacks","color":"#843333","fontColor":"#FFFFFF","icon":"icons/svg/acid.svg","sorting":"m","contents":["OOKf1Stu6m8HZNWA","1dUKN6KL7g3cdDdz"],"children":["temp_qfrxw4o5gm"],"folderPath":[],"version":"2.4.7"}}}
{"_id":"lkQvlxkMpsbLwwx5","name":"Tanglefoot","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/tanglefoot.webp","scope":"global","command":"let tokenD = args[1].sourceToken\nlet target = Array.from(game.user.targets)[0]\n\nlet premAssets = [\"jb2a.eldritch_blast.lightgreen\", {}, \"jb2a.entangle.green02\"]\nlet freeAssets = [\"jb2a.eldritch_blast.purple\", { hue: 180 }, \"jb2a.entangle.green\"]\n\nlet assets = premAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nif (typeof args[0] === \"string\") {\n    if (args[0] == \"on\") {\n        new Sequence()\n            .effect()\n            .name(\"Tanglefoot\")\n            .scaleToObject(1.2)\n            .atLocation(target)\n            .fadeOut(500)\n            .attachTo(target)\n            .fadeIn(500)\n            .persist(true, { persistTokenPrototype: true })\n            .file(\"jb2a.entangle.green\")\n            .play()\n    } else if (args[0] == \"off\") {\n        await Sequencer.EffectManager.endEffects({ name: \"Tanglefoot\", object: tokenD })\n    }\n} else {\n    new Sequence(\"PF2e x JB2A Macros\")\n        .effect()\n            .atLocation(tokenD)\n            .stretchTo(target)\n            .file(assets[0])\n            .filter(\"ColorMatrix\", assets[1])\n            .waitUntilFinished(-3000)\n        .effect()\n            .scaleToObject(1.2)\n            .atLocation(target)\n            .attachTo(target)\n            .fadeOut(500)\n            .repeats(2)\n            .fadeIn(500)\n            .file(assets[2])\n        .play()\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":true},"cf":{"id":"temp_6gsujam4gp6"}}}
{"_id":"lmKZBrfclq8V6sJI","name":"Dimension Jumps","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/movement/pinwheel-turning-blue.webp","scope":"global","command":"let opts = {};\nlet seq = new Sequence()\nlet token = args[1].sourceToken;\nlet movementSpeed = args[0].actor.attributes.speed.total;\n\n// Determine spell level, this is BS though.\n// What I am basically doing is searching the latest messages for a spellLevel tag and see if they have it. Whichever is latest wins, rather than which one caused the damage roll.\n// The flag is also created by checking the HTML of the spell than the actual data, since there is no official spell level flag.\nlet spellLevel = args[0].data.flags.pf2eJB2AMacros || [...args[0].collection].filter(x => x.data.flags?.pf2eJB2AMacros).slice(-1)[0].data.flags.pf2eJB2AMacros.spellLevel\n\n// Determine Spells Range\nswitch (args[0].item.name.replace(/\\(.+\\)/, \"\").trim()) {\n    case \"Dimensional Assault\": opts.range = movementSpeed / 2; break;\n    case \"Snare Hopping\": opts.range = 10 * spellLevel; opts.reverseTeleport = true; break;\n    case \"Abundant Step\": opts.range = Math.max(15, movementSpeed); break;\n    case \"Blink Charge\": opts.range = (spellLevel - 4) * 60; break;\n    case \"Collective Transposition\": opts.range = 30; opts.reverseTeleport = true; opts.possibleTargets = 2 + (spellLevel - 6); break;\n    case \"Dimension Door\": opts.range = spellLevel < 5 ? 120 : 1000; break;\n    case \"Dimensional Steps\": opts.range = 20 + 5 * (spellLevel - 4); break;\n    case \"Shadow Jump\": opts.range = 120; break;\n    case \"Teleport\": opts.range = 100 * (10 * (spellLevel - 6)); break;\n    case \"Unexpected Transposition\": opts.range = 30; opts.switcheroo = true; break;\n    case \"Terrain Transposition\": {\n        let rangeMenu = await warpgate.menu({\n            buttons: [{\n                label: 'Yes',\n                value: 2\n            }, {\n                label: 'No',\n                value: 1\n            }]\n        }, {\n            title: 'Are you in Favoured Terrain?'\n        })\n        opts.range = 90 * rangeMenu.buttons\n        break;\n    }\n}\n\nconsole.log(opts)\n\ntoken.actor.sheet.minimize();\nconst tokenCenter = token.center;\nlet cachedDistance = 0;\nconst checkDistance = async (crosshairs) => {\n\n    while (crosshairs.inFlight) {\n\n        //wait for initial render\n        await warpgate.wait(100);\n\n        const ray = new Ray(tokenCenter, crosshairs);\n\n        const distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0]\n\n        //only update if the distance has changed\n        if (cachedDistance !== distance) {\n            cachedDistance = distance;\n            if (distance > opts.range) {\n                crosshairs.icon = 'icons/svg/hazard.svg'\n            } else {\n                crosshairs.icon = token.data.img\n            }\n            crosshairs.draw()\n            crosshairs.label = `${distance} ft`\n        }\n    }\n}\n\nconst callbacks = {\n    show: checkDistance\n}\n\nlet targetLocation = await warpgate.crosshairs.show({ size: token.data.width, icon: token.data.img, label: '0 ft.', interval: token.data.width % 2 === 0 ? 1 : -1 }, callbacks)\n\nif (targetLocation.cancelled) { token.actor.sheet.maximize(); return; }\nif (cachedDistance > opts.range) {\n    ui.notifications.error(`Your teleport has a maximum range of ${opts.range} ft. Last try.`)\n    targetLocation = await warpgate.crosshairs.show({ size: token.data.width, icon: token.data.img, label: '0 ft.', interval: -1 }, callbacks)\n}\nif (cachedDistance > opts.range) {\n    ui.notifications.error(`Your teleport has a maximum range of ${opts.range} ft.`)\n    return\n}\n\nlet targetToken = warpgate.crosshairs.collect(targetLocation).filter(token => !canvas.tokens.controlled.map(t => t.id).includes(token.id))[0]?.object;\n\nswitch (args[0].item.name) {\n    case \"Dimensional Assault\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.purple\", \"jb2a.misty_step.01.purple\", \"jb2a.energy_strands.range.standard.purple.04\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.purple\")\n            .atLocation(token)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(token)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.purple.04\")\n            .atLocation(token)\n            .stretchTo(targetLocation)\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.purple\")\n            .attachTo(token)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(token)\n            .opacity(1.0)\n        break;\n    };\n    case \"Snare Hopping\": {\n        ui.notifications.error(`Unimplemented!`)\n        break;\n    };\n    case \"Abundant Step\": {\n        seq.effect()\n            .file(token.data.img)\n            .atLocation(token)\n            .attachTo(token, {bindAlpha: false})\n            .loopProperty(\"spriteContainer\", \"position.x\", { values: [0, 15, 0 -15], duration: 50})\n            .loopProperty(\"spriteContainer\", \"position.y\", { values: [0, -15, 0, 15], duration: 50})\n            .from(token)\n            .filter(\"Blur\", { blurX: 5, blurY: 0, quality: 5 })\n            .fadeIn(500)\n            .fadeOut(500)\n            .wait(300)\n        .animation()\n            .opacity(0)\n            .on(token)\n            .moveTowards(targetLocation)\n            .moveSpeed(50)\n            .snapToGrid()\n            .waitUntilFinished()\n        .animation()\n            .opacity(1)\n            .on(token)\n        break;\n    };\n    case \"Dimension Door\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.magic_signs.rune.conjuration.intro.blue\", \"jb2a.portals.vertical.vortex.blue\"])\n        const portalScale = token.w / canvas.grid.size * 0.7;\n        seq.effect()\n            .file('jb2a.magic_signs.rune.conjuration.intro.blue')\n            .atLocation(token)\n            .scale(portalScale * 0.7)\n            .opacity(0.5)\n            .waitUntilFinished(-600)\n        .effect()\n            .file('jb2a.portals.vertical.vortex.blue')\n            .atLocation(token)\n            .offset({ y: (token.h)})\n            .scale(portalScale)\n            .duration(1200)\n            .fadeIn(200)\n            .fadeOut(500)\n        .animation()\n            .on(token)\n            .opacity(0)\n        .effect()\n            .from(token)\n            .moveTowards({ x: token.center.x, y: token.center.y - token.h }, { ease: 'easeInCubic', rotate: false })\n            .zeroSpriteRotation()\n            .fadeOut(500)\n            .duration(500)\n            .wait(250)\n        .effect()\n            .file('jb2a.portals.vertical.vortex.blue')\n            .atLocation(targetLocation)\n            .offset({ y: (token.h)})\n            .scale(portalScale)\n            .duration(1200)\n            .fadeOut(500)\n            .fadeIn(200)\n        .effect()\n            .from(token)\n            .atLocation({ x: targetLocation.x, y: targetLocation.y - token.h }, { ease: 'easeInCubic', rotate: false })\n            .fadeIn(500)\n            .duration(500)\n            .moveTowards(targetLocation)\n            .rotate(90)\n            .waitUntilFinished()\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation, { relativeToCenter: true })\n            .opacity(1)\n        break;\n    };\n    case \"Dimensional Steps\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.blue\", \"jb2a.misty_step.01.blue\", \"jb2a.energy_strands.range.standard.blue.04\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.blue\")\n            .atLocation(token)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(token)\n            .opacity(0)\n            .waitUntilFinished()\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.blue\")\n            .attachTo(token)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(token)\n            .opacity(1.0)\n        break;\n    };\n    case \"Blink Charge\": {\n        await Sequencer.Preloader.preloadForClients([\n            \"jb2a.misty_step.02.blue\",\n            \"jb2a.misty_step.01.blue\",\n            \"jb2a.energy_strands.range.standard.blue.04\",\n            \"jb2a.energy_strands.overlay.blue.01\"\n        ])\n        seq.effect()\n            .file(\"jb2a.energy_strands.overlay.blue.01\")\n            .atLocation(token)\n            .attachTo(token)\n            .fadeIn(500)\n            .scaleToObject(token.data.scale)\n            .wait(600)\n        .effect()\n            .file(\"jb2a.misty_step.01.blue\")\n            .atLocation(token)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(token)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.blue.04\")\n            .atLocation(token)\n            .stretchTo(targetLocation)\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.blue\")\n            .attachTo(token)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(token)\n            .opacity(1.0)\n        if (Array.from(game.user.targets)[0]) {\n            await Sequencer.Preloader.preloadForClients([\"jb2a.divine_smite.target.blueyellow\"])\n            seq.effect()\n                .waitUntilFinished(-500)\n                .file(\"jb2a.divine_smite.target.blueyellow\")\n                .atLocation(Array.from(game.user.targets)[0])\n                .scale({ x: 1, y: 1 })\n        }\n        break;\n    };\n    case \"Shadow Jump\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.dark_black\", \"jb2a.misty_step.01.dark_black\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.dark_black\")\n            .atLocation(token)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(token)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.drop_shadow.dark_black\")\n            .atLocation(token)\n            .moveTowards(targetLocation)\n            .scale({ x: 1, y: 1 })\n            .waitUntilFinished(-1500)\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.dark_black\")\n            .attachTo(token)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(token)\n            .opacity(1.0)\n        break;\n    };\n    case \"Terrain Transposition\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.swirling_leaves.complete.01.green.0\", \"jb2a.energy_strands.range.standard.dark_green.03\"])\n        seq.effect()\n            .file(\"jb2a.swirling_leaves.complete.01.green.0\")\n            .atLocation(token)\n            .attachTo(token)\n            .fadeIn(500)\n            .scaleToObject(token.data.scale * 2)\n            .waitUntilFinished(-2000)\n            .fadeOut(500)\n        .effect()\n            .from(token)\n            .fadeOut(500)\n            .atLocation(token)\n            .attachTo(token, {bindAlpha: false})\n        .animation()\n            .on(token)\n            .fadeOut(500)\n            .opacity(0)\n            .waitUntilFinished()\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.dark_green\")\n            .atLocation(token)\n            .stretchTo(targetLocation)\n            .waitUntilFinished(-1300)\n        .animation()\n            .on(token)\n            .fadeIn(500)\n            .opacity(1.0)\n        break;\n    };\n    case \"Collective Transposition\": {\n        break;\n    };\n    case \"Teleport\": {\n        break;\n    };\n    case \"Unexpected Transposition\": {\n        console.log(targetToken)\n        seq.effect()\n            .file(\"jb2a.smoke.puff.centered\")\n            .atLocation(token)\n            .attachTo(token)\n            .scaleToObject(2)\n        .effect()\n            .file(\"jb2a.smoke.puff.centered\")\n            .atLocation(targetToken)\n            .attachTo(targetToken)\n            .scaleToObject(2)\n        .animation()\n            .on(token)\n            .opacity(0)\n        .animation()\n            .on(targetToken)\n            .opacity(0)\n        .animation()\n            .on(token)\n            .teleportTo(targetToken)\n            .fadeIn(500)\n        .animation()\n            .on(targetToken)\n            .teleportTo(token)\n            .fadeIn(500)\n        break;\n    };\n}\n\nawait seq.play()\n\ntoken.actor.sheet.maximize();","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_6gsujam4gp6"}}}
{"_id":"nA5gqHtwwwsyOtih","name":"Encumbered","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/commodities/stone/stone-pile-grey.webp","scope":"global","command":"let token = args[1].sourceToken\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .name(`${token.name} - Encumbered`)\n            .attachTo(token, {bindAlpha: false})\n            .from(token)\n            .loopProperty(\"spriteContainer\", \"scale.x\", { from: 1, to: 0.9, duration: 2000, pingPong: true})\n            .loopProperty(\"spriteContainer\", \"scale.y\", { from: 1, to: 0.9, duration: 2000, pingPong: true})\n            .persist()\n            .filter(\"Glow\", { color: 000000, distance: 20, outerStrength: 1, innerStrength: 0 })\n            .fadeOut(500)\n            // Clumsy .loopProperty(\"spriteContainer\", \"rotation\", { values: [0, 5, 0, -5], duration: 2000, pingPong: true})\n        .wait(100)\n        .animation()\n            .fadeOut(100)\n            .on(token)\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence()\n        .animation()\n            .fadeIn(100)\n            .on(token)\n        .play()\n    await Sequencer.EffectManager.endEffects({ name: `${token.name} - Encumbered`, object: token });\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"pC8bqYNdqGeeUoWO","name":"Grim Tendrils","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/unholy/energy-smoke-pink.webp","scope":"global","command":"const template = args[1].templateData;\nnew Sequence()\n    .effect()\n        .file('jb2a.energy_strands.range.multiple.purple.01')\n        .fadeIn(500)\n        .fadeOut(500)\n        .atLocation(template)\n        .rotateTowards(template)\n        .stretchTo(template, {})\n        .scale({ x: 1.4 })\n        .spriteOffset({ x: -50 })\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"},"cf":{"id":"temp_c76abfsyvz7"}}}
{"_id":"reYCOeWs6vFSD91T","name":"Cone Template","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/dice-target.svg","scope":"global","command":"// Original by david (aka claudekennilol)#2244\n// Modified by MrVauxs#8622\n// requires warpgate, jb2a patreon, and sequencer\n\nconst tokenD = args[0] ?? token\nconst gridSize = canvas.grid.h;\nconst sourceSquare = (center, widthSquares, heightSquares) => {\n    const h = gridSize * heightSquares;\n    const w = gridSize * widthSquares;\n\n    const bottom = center.y + h / 2;\n    const left = center.x - w / 2;\n    const top = center.y - h / 2;\n    const right = center.x + w / 2;\n\n    const rightSpots = [...new Array(heightSquares)].map((_, i) => ({\n        direction: 0,\n        x: right,\n        y: top + gridSize / 2 + gridSize * i,\n    }));\n    const bottomSpots = [...new Array(widthSquares)].map((_, i) => ({\n        direction: 90,\n        x: right - gridSize / 2 - gridSize * i,\n        y: bottom,\n    }));\n    const leftSpots = [...new Array(heightSquares)].map((_, i) => ({\n        direction: 180,\n        x: left,\n        y: bottom - gridSize / 2 - gridSize * i,\n    }));\n    const topSpots = [...new Array(widthSquares)].map((_, i) => ({\n        direction: 270,\n        x: left + gridSize / 2 + gridSize * i,\n        y: top,\n    }));\n    const allSpots = [\n        ...rightSpots.slice(Math.floor(rightSpots.length / 2)),\n        { direction: 45, x: right, y: bottom },\n        ...bottomSpots,\n        { direction: 135, x: left, y: bottom },\n        ...leftSpots,\n        { direction: 225, x: left, y: top },\n        ...topSpots,\n        { direction: 315, x: right, y: top },\n        ...rightSpots.slice(0, Math.floor(rightSpots.length / 2)),\n    ];\n\n    return {\n        x: left,\n        y: top,\n        center,\n        top,\n        bottom,\n        left,\n        right,\n        h,\n        w,\n        heightSquares,\n        widthSquares,\n        allSpots,\n    };\n};\n\n// cast from source token, if no source token, then select a square to originate the cone from.\nlet square;\nif (typeof tokenD === 'undefined') {\n    const sourceConfig = {\n        drawIcon: true,\n        drawOutline: false,\n        interval: -1,\n        label: 'Cone Start',\n    };\n\n    const source = await warpgate.crosshairs.show(sourceConfig);\n    if (source.cancelled) {\n        return;\n    }\n    square = sourceSquare({ x: source.x, y: source.y }, 1, 1);\n}\nelse {\n    const width = Math.max(Math.round(tokenD.data.width), 1);\n    const height = Math.max(Math.round(tokenD.data.height), 1)\n    square = sourceSquare(tokenD.center, width, height);\n}\n\n// Template Data\nconst templateData = {\n    t: args[1]?.templateType ?? \"cone\",\n    distance: args[1]?.distance ?? 15,\n    fillColor: args[1]?.fillColor ?? '#000000',\n    angle: args[1]?.angle ?? 90,\n    ...square.allSpots[0],\n    user: game.userId,\n}\n\nlet template = (await canvas.scene.createEmbeddedDocuments('MeasuredTemplate', [templateData]))[0];\n\nconst targetConfig = {\n    drawIcon: false,\n    drawOutline: false,\n}\n\nlet currentSpotIndex = 0;\nconst updateTemplateLocation = async (crosshairs) => {\n    while (crosshairs.inFlight) {\n        await warpgate.wait(100);\n\n        const totalSpots = 4 + 2 * square.heightSquares + 2 * square.widthSquares;\n        const radToNormalizedAngle = (rad) => {\n            let angle = (rad * 180 / Math.PI) % 360;\n\n            // offset the angle for even-sided tokens, because it's centered in the grid it's just wonky without the offset\n            if (square.heightSquares % 2 === 0 && square.widthSquares % 2 === 0) {\n                angle -= (360 / totalSpots) / 2;\n            }\n            const normalizedAngle = Math.round(angle / (360 / totalSpots)) * (360 / totalSpots);\n            return normalizedAngle < 0\n                ? normalizedAngle + 360\n                : normalizedAngle;\n        }\n\n        const ray = new Ray(square.center, crosshairs);\n        const angle = radToNormalizedAngle(ray.angle);\n        const spotIndex = Math.ceil(angle / 360 * totalSpots);\n\n        if (spotIndex === currentSpotIndex) {\n            continue;\n        }\n\n        currentSpotIndex = spotIndex;\n        const spot = square.allSpots[currentSpotIndex];\n\n        template = await template.update({ ...spot });\n\n        const getCenterOfSquares = (t) => {\n            const x1 = t.x + gridSize / 2;\n            const y1 = t.y + gridSize / 2;\n            const tokenSquaresWidth = t.data.width;\n            const tokenSquaresHeight = t.data.height;\n            const centers = [];\n            for (let x = 0; x < tokenSquaresWidth; x++) {\n                for (let y = 0; y < tokenSquaresHeight; y++) {\n                    centers.push({ id: t.id, center: { x: x1 + x * gridSize, y: y1 + y * gridSize } });\n                }\n            }\n            return centers;\n        };\n        const centers = canvas.tokens.placeables\n            .map(t => t.actor.data.data.size <= 4\n                ? { id: t.id, center: t.center }\n                : getCenterOfSquares(t))\n            .flatMap(x => x);\n        const tokenIdsToTarget = centers.filter(o => canvas.grid.getHighlightLayer('Template.' + template.id).geometry.containsPoint(o.center)).map(x => x.id);\n        game.user.updateTokenTargets(tokenIdsToTarget);\n    }\n}\n\nconst rotateCrosshairs = await warpgate.crosshairs.show(\n    targetConfig,\n    {\n        show: updateTemplateLocation\n    });\nif (rotateCrosshairs.cancelled) {\n    await template.delete();\n    game.user.updateTokenTargets();\n    return;\n}\n\nconst seq = new Sequence(\"PF2e x JB2A Macros\")\n\nseq.effect()\n    .playIf(!args[2]?.length)\n    .file('jb2a.magic_signs.rune.evocation.intro.red')\n    .atLocation(square)\n    .offset({ x: -square.w / 2, y: -square.h / 2 })\n    .scaleToObject(1.6)\n    .opacity(0.5)\n    .waitUntilFinished()\n.effect()\n    .playIf(!args[2]?.length)\n    .file('jb2a.burning_hands.02.orange')\n    .fadeIn(300)\n    .attachTo(template)\n    .stretchTo(template, {onlyX: true})\n    .rotateTowards(template)\n    .mask()\n    .waitUntilFinished()\n    .thenDo(async () => {\n        if (args && args[2]) {\n            args[2].forEach((element) => seq\n                .effect()\n                    .file(element)\n                    .fadeIn(300)\n                    .attachTo(template)\n                    .stretchTo(template, {onlyX: true})\n                    .rotateTowards(template)\n                    .mask()\n            )\n        }\n    })\n\nseq.thenDo(async function(){\n    await template.delete();\n})\n\nawait seq.play();","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"},"cf":{"id":"temp_9hsvsxrbtvj"}}}
{"_id":"tItdi7rFVh3PEyKx","name":"Petrified","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/earth/strike-body-stone-crumble.webp","scope":"global","command":"let token = args[1].sourceToken\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .name(`${token.name} - Petrified`)\n            .attachTo(token, {bindAlpha: false})\n            .from(token)\n            .filter(\"ColorMatrix\", { \n                hue: 0, \n                brightness: 1, \n                contrast: 0, \n                saturate: -1\n            })\n            .persist()\n            // .fadeIn(500)\n            .fadeOut(500)\n        .effect()\n            .name(`${token.name} - Petrified`)\n            .scaleToObject(2)\n            .randomRotation()\n            .file(\"jb2a.impact.ground_crack.still_frame.02\")\n            .attachTo(token, {bindAlpha: false})\n            .mask(token)\n            .persist()\n        .animation()\n            .on(token)\n            .fadeOut(100)\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence()\n        .animation()\n            .fadeIn(100)\n            .on(token)\n        .play()\n    await Sequencer.EffectManager.endEffects({ name: `${token.name} - Petrified`, object: token })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"uCRBEs5o1lFVhRqT","name":"Arcane Cascade","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/features/classes/arcane-cascade.webp","scope":"global","command":"let tokenD = args[1].sourceToken\nlet tokenScale = Math.min(args[1].sourceToken.data.scale, 1)\n\nlet premAssets = [\"jb2a.token_border.circle.static.blue.010\", \"jb2a.divine_smite.caster.yellowwhite\",\"jb2a.divine_smite.caster.orange\",\"jb2a.divine_smite.caster.purplepink\"]\nlet freeAssets = [\"jb2a.token_border.circle.static.blue.002\", \"jb2a.divine_smite.caster.blueyellow\",\"jb2a.divine_smite.caster.blueyellow\",\"jb2a.divine_smite.caster.blueyellow\"]\n\nlet assets = premAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nif (args[0] == \"on\") {\n    let seq = new Sequence(\"PF2e x JB2A Macros\")\n    let damageType = args[1].rinsedName.replace(\"StanceArcaneCascade\", \"\").trim().toLowerCase()\n    switch (damageType) {\n        case \"sonic\": seq.effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\")\n                .attachTo(tokenD)\n                .scaleToObject(1.2 * tokenScale)\n                .fadeOut(1000)\n                .fadeIn(1000)\n                .belowTokens()\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\")\n                .attachTo(tokenD)\n                .fadeOut(2000)\n                .fadeIn(2000)\n                .belowTokens()\n                .scaleToObject(1.3 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\")\n                .attachTo(tokenD)\n                .belowTokens()\n                .fadeOut(3000)\n                .fadeIn(3000)\n                .scaleToObject(1.4 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\")\n                .attachTo(tokenD)\n                .fadeOut(4000)\n                .fadeIn(4000)\n                .belowTokens()\n                .scaleToObject(1.5 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.extras.tmfx.border.circle.outpulse.02.normal\")\n                .attachTo(tokenD)\n                .belowTokens()\n                .fadeOut(5000)\n                .fadeIn(5000)\n                .scaleToObject(1.6 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"poison\": seq.effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.icon.poison.dark_green\")\n                .attachTo(tokenD)\n                .zIndex(10)\n                .scaleToObject(1 * tokenScale)\n                .animateProperty(\"sprite\", \"height\", { from: 1 * tokenScale, to: 1.5 * tokenScale, duration: 1500, gridUnits: true, ease: \"easeOutBack\"})\n                .animateProperty(\"sprite\", \"width\", { from: 1 * tokenScale, to: 1.5 * tokenScale, duration: 1500, gridUnits: true, ease: \"easeOutBack\"})\n                .fadeOut(1000)\n                .fadeIn(600)\n                .duration(2000)\n                .waitUntilFinished(-1500)\n            .effect()\n                .playIf(assets === premAssets)\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.fog_cloud.02.green\")\n                .attachTo(tokenD)\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(1500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .playIf(assets === premAssets)\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.fog_cloud.02.green\")\n                .attachTo(tokenD)\n                .opacity(0.3)\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(1500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"positive\": seq.effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.energy_strands.in.green.01.2\")\n                .attachTo(tokenD)\n                .scaleToObject(2 * tokenScale)\n                .waitUntilFinished(-500)\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.energy_strands.complete.blue.01\")\n                .attachTo(tokenD)\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .filter(\"ColorMatrix\", {\n                    hue: 240\n                })\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.energy_strands.overlay.blue.01\")\n                .attachTo(tokenD)\n                .filter(\"ColorMatrix\", {\n                    hue: 240\n                })\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"negative\": seq.effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.energy_strands.in.purple.01.2\")\n                .attachTo(tokenD)\n                .playIf(assets === premAssets)\n                .scaleToObject(2 * tokenScale)\n                .waitUntilFinished(-500)\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.energy_strands.complete.purple.01\")\n                .attachTo(tokenD)\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .playIf(assets === premAssets)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .name(\"Arcane Cascade\")\n                .playIf(assets === premAssets)\n                .file(\"jb2a.energy_strands.overlay.purple.01\")\n                .attachTo(tokenD)\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.energy_strands.in.green.01.2\")\n                .attachTo(tokenD)\n                .playIf(assets === freeAssets)\n                .filter(\"ColorMatrix\", {\n                    hue: -170\n                })\n                .scaleToObject(2 * tokenScale)\n                .waitUntilFinished(-500)\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.energy_strands.complete.blue.01\")\n                .attachTo(tokenD)\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .playIf(assets === freeAssets)\n                .filter(\"ColorMatrix\", {\n                    hue: 60\n                })\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .name(\"Arcane Cascade\")\n                .playIf(assets === freeAssets)\n                .file(\"jb2a.energy_strands.overlay.blue.01\")\n                .attachTo(tokenD)\n                .filter(\"ColorMatrix\", {\n                    hue: 60\n                })\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"mental\": seq.effect()\n                .file(assets[3])\n                .attachTo(tokenD)\n                .name(\"Arcane Cascade\")\n                .scaleToObject(1.5 * tokenScale)\n                .waitUntilFinished(-2000)\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.magic_signs.rune.enchantment.intro.purple\")\n                .attachTo(tokenD)\n                .zIndex(10)\n                .animateProperty(\"sprite\", \"height\", { from: 1 * tokenScale, to: 1.5 * tokenScale, duration: 1500, gridUnits: true, ease: \"easeOutBack\"})\n                .animateProperty(\"sprite\", \"width\", { from: 1 * tokenScale, to: 1.5 * tokenScale, duration: 1500, gridUnits: true, ease: \"easeOutBack\"})\n                .fadeOut(1500)\n                .fadeIn(700)\n            .effect()\n                .name(\"Arcane Cascade\")\n                .file(\"jb2a.token_border.circle.static.purple.003\")\n                .attachTo(tokenD)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"lawful\": seq.effect()\n                .file(assets[2])\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(2 * tokenScale)\n                .waitUntilFinished(-2000)\n            .effect()\n                .file(\"jb2a.wind_stream.white\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .tint(\"#FFA500\")\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.ward.rune.yellow.01\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .filter(\"ColorMatrix\", {\n                    hue: -20\n                })\n                .belowTokens()\n                .scaleToObject(2 * tokenScale)\n                .fadeOut(500)\n                .fadeIn(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"good\": seq.effect()\n                .file(assets[1])\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(1.5 * tokenScale)\n                .waitUntilFinished(-1400)\n            .effect()\n                .file(\"jb2a.bless.200px.intro.yellow\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(1.7 * tokenScale)\n                .fadeOut(250)\n                .waitUntilFinished(-500)\n            .effect()\n                .file(\"jb2a.bless.200px.loop.yellow\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .belowTokens()\n                .scaleToObject(1.7 * tokenScale)\n                .fadeOut(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"force\": seq.effect()\n                .file(\"jb2a.antilife_shell.blue_no_circle\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(1.4 * tokenScale)\n                .waitUntilFinished(-1500)\n            .effect()\n                .file(\"jb2a.fireflies.many.01.blue\")\n                .name(\"Arcane Cascade\")\n                .randomRotation()\n                .attachTo(tokenD)\n                .scaleToObject(1.4 * tokenScale)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.wall_of_force.sphere.blue\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(1.3 * tokenScale)\n                .fadeIn(800)\n                .fadeOut(500)\n                .persist(true, { persistTokenPrototype: true })\n            .play();\n            break;\n        case \"fire\": seq.effect()\n            .file(\"jb2a.fireflies.many.01.green\")\n            .name(\"Arcane Cascade\")\n            .attachTo(tokenD)\n            .filter(\"ColorMatrix\", {\n                hue: 300\n            })\n            .randomRotation()\n            .scaleToObject(1.5 * tokenScale)\n            .fadeIn(500)\n            .fadeOut(500)\n            .opacity(0.7)\n            .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.fumes.fire.orange\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .spriteAnchor({ x: 0.1, y: 0.9 })\n                .belowTokens()\n                .scaleToObject(1.5 * tokenScale)\n                .fadeIn(500)\n                .fadeOut(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.005\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .filter(\"ColorMatrix\", {\n                    hue: 190\n                })\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .opacity(0.9)\n                .persist(true, { persistTokenPrototype: true })\n            .play()\n            break;\n        case \"electricity\": seq.effect()\n            .file(\"jb2a.divine_smite.caster.blueyellow\")\n            .name(\"Arcane Cascade\")\n            .filter(\"ColorMatrix\", {\n                hue: 100,\n                contrast: 1,\n                saturate: 0     \n            })\n            .tint(\"#7DF9FF\")\n            .attachTo(tokenD)\n            .scaleToObject(2 * tokenScale)\n            .waitUntilFinished(-1500)\n            .effect()\n                .file(\"jb2a.static_electricity.03.blue\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(1.5 * tokenScale)\n                .fadeOut(500)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(assets[0])\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .play()\n            break;\n        case \"evil\": seq.effect()\n                .file(\"jb2a.icon.fear.orange\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeIn(500)\n                .fadeOut(500)\n                .duration(2000)\n                .scaleToObject(2 * tokenScale)\n            .effect()\n                .file(\"jb2a.wind_stream.white\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .tint(\"#ff4500\")\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .tint(\"#ff4500\")\n                .persist(true, { persistTokenPrototype: true })\n            break;\n        case \"cold\": seq.effect()\n                .file(\"jb2a.ice_spikes.radial.burst.white\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeIn(500)\n                .fadeOut(500)\n                .belowTokens()\n                .duration(2000)\n                .scaleToObject(4 * tokenScale)\n            .effect()\n                .file(\"jb2a.wind_stream.white\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.shield_themed.below.ice.01.blue\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .opacity(0.6)\n                .belowTokens()\n                .scaleToObject(1.4 * tokenScale)\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.shield_themed.above.ice.01.blue\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .scaleToObject(1.4 * tokenScale)\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n         break;\n        case \"chaotic\": seq.effect()\n                .file(\"jb2a.icon.fear.dark_purple\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeIn(500)\n                .fadeOut(500)\n                .duration(2000)\n                .scaleToObject(2 * tokenScale)\n            .effect()\n                .file(\"jb2a.wind_stream.white\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .tint(\"#800080\")\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .tint(\"#800080\")\n                .persist(true, { persistTokenPrototype: true })\n            break;\n        case \"acid\": seq.effect()\n                .file(\"jb2a.liquid.splash.blue\")\n                .name(\"Arcane Cascade\")\n                .atLocation(tokenD)\n                .fadeIn(500)\n                .fadeOut(500)\n                .tint(\"#8ffe09\")\n                .scaleToObject(2 * tokenScale)\n            .effect()\n                .file(\"jb2a.liquid.splash.blue\")\n                .name(\"Arcane Cascade\")\n                .atLocation(tokenD)\n                .fadeIn(500)\n                .belowTokens()\n                .fadeOut(500)\n                .tint(\"#8ffe09\")\n                .scaleToObject(2 * tokenScale)\n            .effect()\n                .file(\"jb2a.wind_stream.white\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .tint(\"#8ffe09\")\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .tint(\"#8ffe09\")\n                .persist(true, { persistTokenPrototype: true })\n            break;\n        case \"slashing\":\n        case \"piercing\":\n        case \"bludgeoning\": seq.effect()\n                .file(\"jb2a.extras.tmfx.outpulse.circle.02.normal\")\n                .atLocation(tokenD)\n                .size(4, {gridUnits: true})\n                .playIf(damageType == \"bludgeoning\")\n                .opacity(0.25)\n            .effect()\n                .file(\"jb2a.impact.ground_crack.orange.01\")\n                .atLocation(tokenD)\n                .belowTokens()\n                .playIf(damageType == \"bludgeoning\")\n                .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n                .size(3.5, {gridUnits: true})\n                .zIndex(1)\n                .tint(\"#808080\")\n            .effect()\n                .file(\"jb2a.impact.ground_crack.still_frame.01\")\n                .atLocation(tokenD)\n                .playIf(damageType == \"bludgeoning\")\n                .belowTokens()\n                .fadeIn(2000)\n                .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n                .size(3.5, {gridUnits: true})\n                .fadeOut(20000)\n                .tint(\"#808080\")\n                .zIndex(0)\n            .effect()\n                .file(\"jb2a.wind_stream.white\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .scaleToObject(tokenScale)\n                .rotate(90)\n                .fadeOut(1500)\n                .mask()\n                .fadeIn(700)\n                .persist(true, { persistTokenPrototype: true })\n            .effect()\n                .file(\"jb2a.token_border.circle.static.blue.001\")\n                .name(\"Arcane Cascade\")\n                .attachTo(tokenD)\n                .fadeOut(3000)\n                .opacity(0.6)\n                .scaleToObject(2 * tokenScale)\n                .fadeIn(700)\n                .tint(\"#808080\")\n                .persist(true, { persistTokenPrototype: true })\n            break;\n    }\n    seq.play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ name: \"Arcane Cascade\", object: tokenD })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.rBz1gNwQkWu8TidN"},"cf":{"id":"temp_s3arecn2xs"}}}
{"_id":"wMO4oKv5NQ6GkYAq","name":"Animal Instinct","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/features/classes/animal-instinct.webp","scope":"global","command":"const attackName = args[0]?.data?.flags?.pf2e?.modifierName\n\nif (!attackName) return;\n\nconst rinsedAttackName = attackName.replace(/(Melee|Ranged) Strike:/g, \"\").trim()\nconst targets = [args[0]?.target?.token]\n\nAutoAnimations.playAnimation(\n    args[0]?.token, \n    targets,\n    { name: rinsedAttackName },\n    {\n        playOnMiss: game.settings.get(\"autoanimations\", \"playonmiss\"), \n        hitTargets: args[0]?.roll?.data?.degreeOfSuccess > 1 ? targets : []\n    }\n)","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.UO1bBCeHQtxb8JSp"},"cf":{"id":"temp_6gsujam4gp6"}}}
{"_id":"y2Hundr4PzbGNeys","name":"Bless","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/bless.webp","scope":"global","command":"let caster = args[1].sourceToken\n\nlet auraEffectRadius = caster.actor.items.filter(x => x.name.includes(\"Aura: Bless\"))[0].data.data.rules[0].radius\n\nauraEffectRadius = 1 + (auraEffectRadius / 5) * 3\n\nif (args[0] == \"on\") {\n    new Sequence(\"Bless\")\n        .effect()\n            .file(\"jb2a.bless.400px.intro.yellow\")\n            .scaleIn(2, 1000, {ease: \"easeInBounce\"})\n            .atLocation(caster)\n            .attachTo(caster)\n            .waitUntilFinished(-500)\n            .name(\"Bless Intro\")\n            .origin(\"BlessAnim\")\n            .size(auraEffectRadius, { gridUnits: true })\n        .effect()\n            .file(\"jb2a.bless.400px.loop.yellow\")\n            .atLocation(caster)\n            .fadeOut(500)\n            .persist(true, { persistTokenPrototype: true })\n            .attachTo(caster)\n            .belowTokens(true)\n            .origin(\"BlessAnim\")\n            .name(\"Bless\")\n            .scaleOut(0, 500, {ease: \"easeOutCubic\"})\n            .size(auraEffectRadius, { gridUnits: true })\n        .play()\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ origin: \"BlessAnim\", source: caster })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.eJJhPoLdv7ul62dc"},"advanced-macros":{"runAsGM":false},"cf":{"id":"temp_o2l5kjd1mwj"}}}
