{"_id":"1SwXNmbriolNG2ap","name":"Rebounding Toss","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/ranged/shuriken-thrown-orange.webp","scope":"global","command":"// WIP!\n return // Comment me out to test\n\nlet targets = Array.from(game.user.targets);\nlet token = args[0].token;\nlet items = args[0].token._actor.items.filter(i => i.type === \"weapon\" && i.isHeld === true)\nlet weapons = []\n\ntoken.actor.sheet.minimize();\n\nlet imageProperties = [\n    \"padding: 1em 1em\",\n    \"border: none\",\n    \"width: 10em\",\n    \"height: auto\"\n]\n\nitems.forEach(x => weapons.push({label: `<img src=\"${x.img}\" style=\"${imageProperties.join(\";\")}\"><p>${x.name}</p>`, value: x}))\n\nlet weaponSelection = await warpgate.menu(\n    {\n        inputs: [\n            { \n                type: 'info', \n                label: 'Which weapon are you attacking with?'\n            },\n            { \n                type: 'info', \n                label: 'Only Equipped Weapons are shown, draw your weapon first if you want to attack with it!'\n            }\n        ],\n        buttons: weapons\n    }, \n    { \n        title: \"Rebounding Toss\"\n    }\n)\n\n\n// Second Throw BS\nlet distanceLimit = 10\nconst tokenCenter = targets[0];\nlet cachedDistance = 0;\n\nconst checkDistance = async(crosshairs) => {\n\n    while (crosshairs.inFlight) {\n        \n        //wait for initial render\n        await warpgate.wait(100);\n        \n        const ray = new Ray( tokenCenter, crosshairs );\n        \n        const distance = canvas.grid.measureDistances([{ray}], {gridSpaces:true})[0]\n\n        //only update if the distance has changed\n        if (cachedDistance !== distance) {\n          cachedDistance = distance;     \n          if(distance > distanceLimit) {\n              crosshairs.icon = 'icons/svg/hazard.svg'\n          } else {\n              crosshairs.icon = weaponSelection.buttons.img\n          }\n          crosshairs.draw()\n          crosshairs.label = `${distance} ft`\n        }\n    }\n}\n\nconst callbacks = {\n    show: checkDistance\n}\n\nif (weaponSelection.buttons) {\n    let weaponOfChoice = (actor.data.data.actions ?? []).filter(action => action.type === 'strike').find(strike => strike.name === weaponSelection.buttons.data.name)\n    \n    if (targets.length === 1) {\n        // Roll attack\n        weaponOfChoice?.attack();\n        \n        // Check if attack hit\n        const secondThrowLocation = warpgate.crosshairs.show({size: token.data.width, icon: token.data.img, label: '0 ft.'}, callbacks);\n                \n        // Handle fuckups\n        if (location.cancelled) {\n            ui.notifications.error('Cancelled Rebounding Toss\\'s second throw.');\n            return;\n        }\n        if (cachedDistance > distanceLimit) {\n            ui.notifications.error('Your Rebounding Toss can only attack a second target within 10 feet of the first one.')\n            return;\n        }\n        \n        const boundsContains = (bounds, point) =>\n            bounds.left <= point.x\n            && point.x <= bounds.right\n            && bounds.top <= point.y\n            && point.y <= bounds.bottom;\n    \n        const found = !!canvas.tokens.placeables.map(x => x.bounds).find(b => boundsContains(b, secondThrowLocation));\n    } else if (targets.length > 1) ui.notifications.info(\"Too many targets!\"); else ui.notifications.info(\"No Targets!\")\n}\n\ntoken.actor.sheet.maximize();","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.fdIIA40dPrWNfbyr"}}}
{"_id":"1dUKN6KL7g3cdDdz","name":"Bouncing Lightning","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/electric-arc.webp","scope":"global","command":"let token = args[1].sourceToken\nlet targetTokens = Array.from(game.user.targets)\nlet sequence = new Sequence() // this is the naimation part, handled by the Sequencer module\n    .effect()\n        .file(\"jb2a.chain_lightning.primary.blue\")\n        .atLocation(token) // Going from origin\n        .stretchTo(targetTokens[0]) // To the current loop's target\n        .waitUntilFinished(-1100)// The next sequence will start 1.1 seconds before the end of the primary Lightning\n    .sound()\n        .file(\"modules/soundfxlibrary/Combat/Single/Spell%20Impact%20Lightning/spell-impact-lightning-3.mp3\")\n        .fadeInAudio(500)\n        .fadeOutAudio(500)\n    .effect()\n        .file(\"jb2a.static_electricity.02.blue\")\n        .atLocation(targetTokens[0])\n        .scaleToObject()\n        .repeats(2)\n        .wait(100)\nfor (let i = 1; i < targetTokens.length; i++) {\n    sequence\n        .effect()\n            .file(\"jb2a.chain_lightning.secondary.blue\")\n            .repeats(2)\n            .atLocation(targetTokens[i - 1]) // Going from origin\n            .stretchTo(targetTokens[i]) // To the current loop's target\n            .wait(200)\n        .sound()\n            .file(\"modules/soundfxlibrary/Combat/Single/Spell%20Impact%20Lightning/spell-impact-lightning-4.mp3\")\n            .fadeInAudio(500)\n            .fadeOutAudio(500)\n        .effect()\n            .file(\"jb2a.static_electricity.02.blue\")\n            .atLocation(targetTokens[i])\n            .scaleToObject()\n            .repeats(2)\n            .wait(200)\n}\nsequence.play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false}}}
{"_id":"CtkjmTtEYfMPbtm4","name":"Heal","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/heal.webp","scope":"global","command":"let diceNumber = args[0]._roll.terms[0].number\nlet caster = args[1].sourceToken\nlet spellTarget = Array.from(game.user.targets)[0]\nlet doNotTargetCaster = false\n\nlet d = new Dialog({\n    title: \"Heal\",\n    content: \"<p>How many actions are you using to cast Heal?</p>\",\n    buttons: {\n    one: {\n    icon: '<span class=\"pf2-icon\">1</span>',\n    label: \"One Action\",\n    callback: () => {\n        spellTarget = Array.from(game.user.targets)[0]\n        oneActionHeal()\n        }\n    },\n    two: {\n    icon: '<span class=\"pf2-icon\">2</span>',\n    label: \"Two Actions\",\n    callback: () => {\n        d2.render(true)\n        }\n    },\n    three:{\n    icon: `<span class=\"pf2-icon\">3</span>`,\n    label: \"Three Actions\",\n    callback: () => {\n        d3.render(true)\n        }\n    }\n    },\n    default: \"Two Actions\"\n})\n\nlet d2 = new Dialog({\n    title: \"Heal\",\n    content: `<p>Post Increased Healing?</p>`,\n    buttons: {\n    one: {\n    label: \"Yes\",\n    callback: () => {\n        let r = new Roll(`8 * @diceNumber`, {diceNumber})\n        r.toMessage()\n        spellTarget = Array.from(game.user.targets)[0]\n        twoActionHeal()\n        }\n    },\n    two: {\n    label: \"No\",\n    callback: () => {\n        spellTarget = Array.from(game.user.targets)[0]\n        twoActionHeal()\n        }\n    }\n    },\n    default: \"No\"\n})\n\nlet d3 = new Dialog({\n    title: \"Heal\",\n    content: `<p>Do you want to target yourself?</p>`,\n    buttons: {\n    one: {\n    label: \"Yes\",\n    callback: () => {\n        doNotTargetCaster = false\n        threeActionHeal()\n        }\n    },\n    two: {\n    label: \"No\",\n    callback: () => {\n        doNotTargetCaster = true\n        threeActionHeal()\n        }\n    }\n    },\n    default: \"No\"\n})\n\nmain()\n\nfunction main(){\n    if(caster != undefined){\n        d.render(true);\n    }else{\n        ui.notifications.error(`You must select the token of the caster!`)\n        return;\n    }    \n}\n\n//Defining unique behavior for each kind of effect\n\n\nfunction oneActionHeal(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) < 7.5){\n            console.log(\"Close enough to touch!\")\n            // checks whether the target is undead or not\n            oneActionHealAnimation()\n        }else{\n            console.log(`Too far to touch!`); \n            ui.notifications.error(`Your target is further than touch distance away! Try again.`);\n            return;\n        }    \n}\n\nfunction twoActionHeal(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) <= 30){\n        console.log(\"Within 30 feet!\")\n        // checks whether the target is undead or not\n        twoActionHealAnimation()\n    }else{\n        console.log(`Farther than 30 feet!`); \n        ui.notifications.error(`Your target is further than 30 feet away! Try again.`);\n        return;\n    }\n}\n\nfunction threeActionHeal(){\n    //divide up all tokens within range into an array for living and an array for undead\n    let tokensOnMap = Array.from(canvas.tokens.placeables)\n    let tokensInRange = tokensOnMap.filter(distance => canvas.grid.measureDistance(distance,caster)<=30)\n    let tokenTraitsInRange = tokensInRange.map(x => x.actor.traits)\n    let undeadTokensInRange = []\n    let livingTokensInRange = []\n    for(let i=0;i<tokensInRange.length;i++){\n        if(Array.from(tokenTraitsInRange[i]).includes(`undead`)||Array.from(tokenTraitsInRange[i]).includes(`dhampir`)){\n            undeadTokensInRange.push(tokensInRange[i])\n        }else if(!Array.from(tokenTraitsInRange[i]).includes(`undead`)&&!Array.from(tokenTraitsInRange[i]).includes(`construct`)&&!Array.from(tokenTraitsInRange[i]).includes(`dhampir`)){\n            if (doNotTargetCaster) {\n                if (!(caster === tokensInRange[i])) livingTokensInRange.push(tokensInRange[i])\n            } else livingTokensInRange.push(tokensInRange[i])\n        }\n    }\n    console.log(undeadTokensInRange)\n    console.log(livingTokensInRange)\n    new Sequence()\n        .effect()\n            .atLocation(caster)\n            .randomRotation()\n            .size(14, {gridUnits: true})\n            .file(\"jb2a.healing_generic.burst.greenorange\")\n            .waitUntilFinished(-1500)\n        .play()\n    for(let i=0;i<undeadTokensInRange.length;i++){\n        new Sequence(\"Damage Undead\")\n            .effect()\n                .atLocation(undeadTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.target.greenyellow\")\n            .play()\n    }\n    for(let i=0;i<livingTokensInRange.length;i++){\n        new Sequence(\"Heal living\")\n            .effect()\n                .atLocation(livingTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.healing_generic.200px.green\")\n            .play()\n    }\n}\n\n//Defining animations for each kind of effect\n    function oneActionHealAnimation(){\n        if(Array.from(spellTarget.actor.traits).includes(`undead`)){\n        //trigger energy strand from caster to target, then trigger healing burst on target\n        new Sequence(\"Damage undead\")\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.target.greenyellow\")\n            .play()\n        }else{\n        //trigger energy strand from caster to target, then trigger damaging burst on target\n        new Sequence(\"Heal living\")\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.healing_generic.200px.green\")\n            .effect()\n                .atLocation(spellTarget)\n                .scaleToObject()\n                .file(\"jb2a.toll_the_dead.purple.skull_smoke\")\n                .delay(500)\n            .play()\n        }\n    }\n    function twoActionHealAnimation(){\n        if(Array.from(spellTarget.actor.traits).includes(`undead`)){\n            //trigger energy strand from caster to target, then trigger healing burst on target\n            new Sequence(\"Damage undead\")    \n                .effect()\n                    .atLocation(caster)\n                    .stretchTo(spellTarget)\n                    .file(\"jb2a.energy_strands.range.standard.dark_purple\")\n                    .waitUntilFinished(-1000)\n                .effect()\n                    .atLocation(spellTarget)\n                    .randomRotation()\n                    .scaleToObject(1.25)\n                    .file(\"jb2a.divine_smite.target.greenyellow\")\n                .play()\n        }else{\n            //trigger energy strand from caster to target, then trigger damaging burst on target\n            new Sequence(\"Heal living\")    \n                .effect()\n                    .atLocation(caster)\n                    .stretchTo(spellTarget)\n                    .file(\"jb2a.energy_strands.range.standard.dark_green\")\n                    .waitUntilFinished(-1000)\n                .effect()\n                    .atLocation(spellTarget)\n                    .randomRotation()\n                    .scaleToObject(1.25)\n                    .file(\"jb2a.healing_generic.200px.green\")\n                .play()\n        }\n    }\n    function threeActionHealAnimation(){\n        \n    }","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"}}}
{"_id":"KHYzBiPwMIY6WfYa","name":"Dancing Lights","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/light/explosion-star-glow-yellow.webp","scope":"global","command":"/* get the pixels equivalent to 5 feet */\nconst gridSquare = canvas.scene.data.size/(canvas.scene.data.gridDistance/5);\n\n/* we will be doing this a lot */\nconst tenFeet = gridSquare * 2;\n\n/* backwards since thats how pop do */\nconst placementOffsets = [\n    {x: -tenFeet}, \n    {y: tenFeet}, \n    {x: tenFeet},\n    {x: 0, y: 0}\n];\n\n/* pop the offsets off one at a time and mody 'location' by that much.\nRemember, this is a culmulative iteration */\nconst offset = (location) => {\n    if (!!placementOffsets.length) {\n        const offset = placementOffsets.pop();\n        location.x += offset.x ?? 0;\n        location.y += offset.y ?? 0;\n    }\n    console.log(\"1\")\n    new Sequence()\n        .effect()\n            .atLocation({\n                x: location.x - gridSquare, \n                y: location.y - gridSquare\n            })\n            .file(\"jb2a.template_circle.out_pulse.02.burst\")\n            .scaleToObject(2)\n            .fadeOut(500)\n        .play()\n}\n\n/* we need to offset the initial placement with pre\n * and subsequent duplicates with post\n */\nconst callbacks = {\n    pre: offset,\n    post: offset\n}\n\nconst config = {\n    interval: -1,\n    size: 3\n}\n\n/* Helper function to find and remove an array element by value */\nfunction findDelete(source, searchElement){\n    const index = source.indexOf(searchElement);\n    if (index > -1) {\n        source.splice(index, 1);\n        return true;\n    }\n    return false;\n}\n\n/* Spawn in our lights with dimLight already set*/\nconst lightsIds = await warpgate.spawn(\"Dancing Light\", {}, callbacks, {duplicates:4, crosshairs:config});\n\n/* We are already dismissing the current actor, hence\n * this trigger firing. We need to now dismiss\n * the remianing 3 lights.\n */\nconst deleteOthers = async (eventData) => {\n    \n    /* whoever we are, we are already being deleted */\n    findDelete(lightsIds, eventData.actorData.token._id);\n    \n    for( const id of lightsIds ){\n        // @todo dismiss really should take an array of ids\n        new Sequence()\n            .effect()\n                .atLocation(id)\n                .file(\"jb2a.template_circle.out_pulse.02.burst\")\n                .scaleToObject(2)\n                .fadeOut(500)\n            .play()\n        await warpgate.dismiss(id, eventData.sceneId);\n    }\n}\n\n/* we only want our event to trigger when it involves\n * one of our just-spawned lightsIds\n */\nconst condition = (eventData) => {\n    return lightsIds.includes(eventData.actorData.token._id)\n}\n\n/* Set up a trigger for when one of our\n * lights is dismissed, all of them\n * get dismissed\n */\nwarpgate.event.trigger(warpgate.EVENT.DISMISS, deleteOthers, condition)","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"}}}
{"_id":"KXoNTv1YkjM3D9NI","name":"Soul Siphon","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/unholy/strike-body-explode-disintegrate.webp","scope":"global","command":"let token = args[1].sourceToken\nlet target = Array.from(game.user.targets)[0]\nnew Sequence()\n    .effect()\n        .atLocation(token)\n        .stretchTo(target)\n        .file(\"jb2a.energy_strands.range.standard.dark_green\")\n        .waitUntilFinished(-1500)\n    .effect()\n        .atLocation(target)\n        .stretchTo(token)\n        .file(\"jb2a.energy_strands.range.standard.dark_red\")\n        .waitUntilFinished(-1500)\n    .effect()\n        .randomRotation()\n        .scaleToObject(2)\n        .atLocation(token)\n        .file(\"jb2a.energy_strands.in.red.01.2\")\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false}}}
{"_id":"LxFkyULbmva8yGDm","name":"Bane_Animation","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/bane.webp","scope":"global","command":"let caster = args[1].sourceToken\n\nlet baneAnim = Sequencer.EffectManager.getEffects({ origin: \"BaneAnim\", source: caster })[0]\n\nlet thereIsIntro = Sequencer.EffectManager.getEffects({ origin: \"BaneAnim\", name: \"Bane Intro\" })[0] //locates the bane animation created by Bane_Animation\n\nfunction main() {\n    //checks to ensure a single token is selected\n    if (canvas.tokens.controlled.length == 0) {\n        ui.notifications.error(\"Select the token on which a bane effect is active.\")\n        return\n    } else if (canvas.tokens.controlled.length > 1) {\n        ui.notifications.error(\"Select only one token.\")\n        return\n    }\n}\nif (baneAnim) {\n    let endAnimation = await warpgate.menu({\n        inputs: [{ type: 'info', label: 'End, Keep, or Expand the Bane Animation?'},],\n        buttons: [{\n            label: 'End',\n            value: 1\n        }, {\n            label: 'Keep',\n            value: 2\n        }, {\n            label: 'Expand',\n            value: 3\n        }]\n    }, { title: \"Bane\" })\n    console.log(endAnimation)\n    if (endAnimation.buttons === 1) {\n        Sequencer.EffectManager.endEffects({ origin: \"BaneAnim\", source: caster })[0]\n    } else if (endAnimation.buttons === 3) {\n        let incrementValue = 3; //3 is the value for radius = 1 square\n\n        main()\n\n        //checks to make sure bane is active on the selected token\n        if (Sequencer.EffectManager.getEffects({ origin: \"BaneAnim\", source: caster })[0] === undefined) {\n            ui.notifications.error(`There are no instances of the bane effect active on this token.`)\n            return\n        }\n\n        //increments the radius of the effect by 1 square\n        baneAnim.update({\n            size: {\n                width: baneAnim.data.size.width + incrementValue,\n                height: baneAnim.data.size.height + incrementValue,\n                gridUnits: true\n            }\n        })\n    }\n\n} else if (!thereIsIntro) {\n    new Sequence(\"Bane\")\n        .effect()\n            .file(\"jb2a.bless.400px.intro.purple\")\n            .scaleIn(2, 1000, {ease: \"easeInBounce\"})\n            .atLocation(caster)\n            .waitUntilFinished(-500)\n            .name(\"Bane Intro\")\n            .origin(\"BaneAnim\")\n        .effect()\n            .file(\"jb2a.bless.400px.loop.purple\")\n            .atLocation(caster)\n            .fadeOut(500)\n            .persist()\n            .attachTo(caster)\n            .belowTokens(true)\n            .origin(\"BaneAnim\")\n            .name(\"Bane\")\n            .scaleOut(0, 500, {ease: \"easeOutCubic\"})\n            .size(4, { gridUnits: true })\n        .play()\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.eJJhPoLdv7ul62dc"},"advanced-macros":{"runAsGM":false}}}
{"_id":"OOYnWts6o8nGdhC6","name":"Haunting Hymn","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/haunting-hymn.webp","scope":"global","command":"let token = args[1].sourceToken\nconst template = args[1].templateData;\nconst [templateX, templateY] = [template.data.x, template.data.y];\nnew Sequence()\n    .effect()\n        .file('jb2a.template_circle.out_pulse.01.burst')\n        .fadeIn(500)\n        .fadeOut(500)\n        .mask(template)\n        .atLocation(token)\n        .scale(1)\n        .randomRotation()\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"}}}
{"_id":"Q0hKSbLmADnVbKQB","name":"Persistent Conditions","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/wounds/blood-drip-droplet-red.webp","scope":"global","command":"let token = args[0].token\nlet type = /Received Fast Healing/g.test(args[0].data.flavor) ? \"healing\" : args[0].data.flags.persistent.damageType;\nlet color = \"jb2a.liquid.splash.red\"\nlet scale = 1.5\nlet below = false\n\nswitch (type.toLowerCase()) {\n    case \"piercing\":\n    case \"slashing\":\n    case \"bleed\": color = \"jb2a.liquid.splash.red\"; break;\n    case \"acid\": color = \"jb2a.liquid.splash.green\"; break;\n    case \"acid\": color = \"jb2a.liquid.splash.blue\"; break;\n    case \"bludgeoning\": below = true; scale = 2.5; color = \"jb2a.impact.ground_crack.blue.03\"; break;\n    case \"good\": color = \"jb2a.divine_smite.caster.yellowwhite\"; break;\n    case \"evil\": color = \"jb2a.divine_smite.caster.dark_red\"; break;\n    case \"lawful\": color = \"jb2a.divine_smite.caster.orange\"; break;\n    case \"chaotic\": color = \"jb2a.divine_smite.caster.purplepink\"; break;\n    case \"sonic\": color = \"jb2a.thunderwave.center.blue\"; break;\n    case \"electricity\": color = \"jb2a.lightning_strike.blue.0\"; break;\n    case \"cold\": scale = 2; color = \"jb2a.impact_themed.ice_shard.blue\"; break;\n    case \"force\": below = true; scale = 3; color = \"jb2a.impact.ground_crack.blue.01\"; break; \n    case \"mental\": color = \"jb2a.magic_signs.rune.enchantment.intro.purple\"; break; \n    case \"poison\": color = \"jb2a.icon.poison.dark_green\"; break; \n    case \"negative\": color = \"jb2a.healing_generic.200px.purple\"; break; \n    case \"positive\": color = \"jb2a.healing_generic.400px.yellow\"; break;\n    case \"healing\": color = \"jb2a.healing_generic.400px.green\"; break;\n    case \"fire\": return;\n    default: ui.notifications.error(`Can't find animation for ${type}`)\n}\n\nnew Sequence()\n    .effect()\n        .belowTokens(below)\n        .fadeIn(500)\n        .fadeOut(500)\n        .atLocation(token)\n        .scaleToObject(scale)\n        .file(color)\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.5PhqUehtnjxz35Gg"},"advanced-macros":{"runAsGM":false}}}
{"_id":"Ud5YTIG6RADp2RTH","name":"Sneak Attack","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/melee/maneuver-daggers-paired-orange.webp","scope":"global","command":"console.log(args)\nlet token = args[0].token\nif (token) new Sequence()\n    .effect()\n        .atLocation(token)\n        .file(\"jb2a.sneak_attack\")\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.ZjHrmv8AvlIcUUpH"}}}
{"_id":"XSlxNRM032wVYBBw","name":"Clumsy","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/movement/feet-winged-boots-brown.webp","scope":"global","command":"/*\nlet token = args[1].sourceToken\nlet conditionOverhead = Sequencer.EffectManager.getEffects({ name: `${token.name} - Conditions Overhead*`, object: token })\n\nconsole.log(conditionOverhead)\n\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .name(`${token.name} - Conditions Overhead - Clumsy`)\n            .attachTo(token, {bindAlpha: false})\n            .from(token)\n            .loopProperty(\"spriteContainer\", \"rotation\", { values: [0, 5, 0, -5], duration: 2000, pingPong: true})\n            .persist()\n            .fadeOut(500)\n        .animation()\n            .on(token)\n            .fadeOut(100)\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence()\n        .animation()\n            .fadeIn(100)\n            .on(token)\n        .play()\n    await Sequencer.EffectManager.endEffects({ name: `${token.name} - Conditions Overhead - Clumsy`, object: token })\n}\n*/","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"}}}
{"_id":"XtFJjALF0A4VvgRn","name":"Invisibility","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/svg/blind.svg","scope":"global","command":"let token = args[1].sourceToken\nif (args[0] == \"on\") {\n    new Sequence()\n        .animation()\n            .on(token)\n            .fadeOut(1000)\n        .effect()\n            .name(`${token.name} - Invisible`)\n            .file(\"jb2a.markers.circle_of_stars.blue\")\n            .fadeIn(1000)\n            .atLocation(token)\n            .mask()\n            .fadeOut(1000)\n            .scaleToObject(token.data.scale)\n            .attachTo(token, {bindAlpha: false, bindVisibility: false})\n            .persist()\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence()\n        .animation()\n            .on(token)\n            .fadeIn(1000)\n        .play();\n    await Sequencer.EffectManager.endEffects({ name: `${token.name} - Invisible`, object: token });\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.4kHSLUSKB3QkneWv"}}}
{"_id":"blSU13HzwUtDVjJZ","name":"Bardic Cantripry","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/sonic/scream-wail-shout-teal.webp","scope":"global","command":"let target = args[1].hitTargets[0] ?? args[1].sourceToken;\nlet token = args[1].sourceToken;\nlet spellName = args[0].item.name\n\nswitch (spellName.toLowerCase()) {\n    case \"hymn of healing\": {\n        new Sequence()\n            .effect()\n                .atLocation(token)\n                .scaleToObject(2)\n                .file(\"jb2a.bardic_inspiration.greenorange\")\n                .waitUntilFinished(-1000)\n            .effect()\n                .atLocation(target)\n                .scaleToObject(1.5)\n                .file(\"jb2a.healing_generic.400px.green\")\n            .play()\n        break;\n    }\n    case \"inspire competence\": {\n        ui.notifications.error(\"Unimplemented!\");\n        break;\n    }\n    default: ui.notifications.error(`Can't find \"${spellName}\"`)\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.JX5DMXhKxzDOjyRw"}}}
{"_id":"gU05Ao19uKUf5H2h","name":"Rage","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/skills/wounds/injury-face-impact-orange.webp","scope":"global","command":"let token = args[1].sourceToken\n\nlet premAssets = [\"jb2a.particles.outward.orange.01.03\", \"jb2a.token_border.circle.static.orange.012\"]\nlet freeAssets = [\"jb2a.particles.outward.greenyellow.01.03\", \"jb2a.token_border.circle.static.blue.007\"]\n\nlet assets = premAssets\nif (game.modules.get(\"JB2A_DnD5e\")?.active) assets = freeAssets;\n\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .file(\"jb2a.extras.tmfx.outpulse.circle.02.normal\")\n            .atLocation(token)\n            .size(4, {gridUnits: true})\n            .opacity(0.25)\n        .effect()\n            .file(\"jb2a.impact.ground_crack.orange.01\")\n            .atLocation(token)\n            .belowTokens()\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .size(3.5, {gridUnits: true})\n            .zIndex(1)\n        .effect()\n            .file(\"jb2a.impact.ground_crack.still_frame.01\")\n            .atLocation(token)\n            .belowTokens()\n            .fadeIn(2000)\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .size(3.5, {gridUnits: true})\n            .fadeOut(20000)\n            .zIndex(0)\n        .effect()\n            .file(\"jb2a.wind_stream.white\")\n            .atLocation(token)\n            .offset({y:75})\n            .size(1.75, {gridUnits: true})\n            .rotate(90)\n            .opacity(0.9)\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .loopProperty(\"sprite\", \"position.y\", { from: -5, to: 5, duration: 50, pingPong: true})\n            .duration(8000)\n            .fadeOut(3000)\n        .effect()\n            .file(assets[0])\n            .atLocation(token)\n            .scaleToObject(2.5)\n            .filter(\"ColorMatrix\", {hue: -15,saturate: 1})\n            .opacity(1)\n            .fadeIn(200)\n            .tint(\"#FF0000\")\n            .fadeOut(3000)\n            .loopProperty(\"sprite\", \"position.x\", { from: -5, to: 5, duration: 50, pingPong: true})\n            .animateProperty(\"sprite\", \"position.y\", { from: 0, to: -100, duration: 6000, pingPong: true, delay:2000})\n            .duration(8000)\n        .effect()\n            .file(\"jb2a.wind_stream.white\")\n            .atLocation(token)\n            .name(\"Rage\")\n            .attachTo(token)\n            .scaleToObject()\n            .rotate(90)\n            .fadeOut(3000)\n            .opacity(1)\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .persist()\n        .effect()\n            .file(assets[1])\n            .atLocation(token)\n            .name(\"Rage\")\n            .attachTo(token)\n            .opacity(0.6)\n            .fadeOut(3000)\n            .scaleToObject(1.9)\n            .filter(\"ColorMatrix\", {saturate: 1})\n            .tint(\"#FF0000\")\n            .persist()\n        .play()\n\n} else if (args[0] == \"off\") {\n    await Sequencer.EffectManager.endEffects({ name: \"Rage\", object: token })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.hqr7muUDzlQbaZfg"}}}
{"_id":"kz6IN257FJ58SgmE","name":"Harm","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/harm.webp","scope":"global","command":"let diceNumber = args[0]._roll.terms[0].number\nlet caster = args[1].sourceToken\nlet spellTarget = Array.from(game.user.targets)[0]\nlet doNotTargetCaster = false\n\nlet d = new Dialog({\n    title: \"Harm\",\n    content: \"<p>How many actions are you using to cast Harm?</p>\",\n    buttons: {\n    one: {\n    icon: '<span class=\"pf2-icon\">1</span>',\n    label: \"One Action\",\n    callback: () => {\n        spellTarget = Array.from(game.user.targets)[0]\n        oneActionHarm()\n        }\n    },\n    two: {\n    icon: '<span class=\"pf2-icon\">2</span>',\n    label: \"Two Actions\",\n    callback: () => {\n        d2.render(true);\n        }\n    },\n    three:{\n    icon: `<span class=\"pf2-icon\">3</span>`,\n    label: \"Three Actions\",\n    callback: () => {\n        d3.render(true);\n        }\n    }\n    },\n    default: \"Two Actions\"\n})\n\nlet d2 = new Dialog({\n    title: \"Harm\",\n    content: `<p>Post Increased Healing?</p>`,\n    buttons: {\n    one: {\n    label: \"Yes\",\n    callback: () => {\n        let r = new Roll(`8 * @diceNumber`, {diceNumber})\n        r.toMessage()\n        spellTarget = Array.from(game.user.targets)[0]\n        twoActionHarm()\n        }\n    },\n    two: {\n    label: \"No\",\n    callback: () => {\n        spellTarget = Array.from(game.user.targets)[0]\n        twoActionHarm()\n        }\n    }\n    },\n    default: \"No\"\n})\n\nlet d3 = new Dialog({\n    title: \"Harm\",\n    content: `<p>Do you want to target yourself?</p>`,\n    buttons: {\n    one: {\n    label: \"Yes\",\n    callback: () => {\n        doNotTargetCaster = false\n        threeActionHarm()\n        }\n    },\n    two: {\n    label: \"No\",\n    callback: () => {\n        doNotTargetCaster = true\n        threeActionHarm()\n        }\n    }\n    },\n    default: \"No\"\n})\n\n\nmain()\n\nfunction main(){\n    if(caster != undefined){\n        d.render(true);\n    }else{\n        ui.notifications.error(`You must select the token of the caster!`)\n        return;\n    }    \n}\n\n//Defining unique behavior for each kind of effect\n\n\nfunction oneActionHarm(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) < 7.5){\n            console.log(\"Close enough to touch!\")\n            // checks whether the target is undead or not\n            oneActionHarmAnimation()\n        }else{\n            console.log(`Too far to touch!`); \n            ui.notifications.error(`Your target is further than touch distance away! Try again.`);\n            return;\n        }    \n}\n\nfunction twoActionHarm(){\n    //error checking for multiple targets\n    if (game.user.targets.size!= 1){\n        ui.notifications.error(\"Select only one target!\")\n        return;\n    }\n    if(canvas.grid.measureDistance(caster,spellTarget) <= 30){\n        console.log(\"Within 30 feet!\")\n        // checks whether the target is undead or not\n        twoActionHarmAnimation()\n    }else{\n        console.log(`Farther than 30 feet!`); \n        ui.notifications.error(`Your target is further than 30 feet away! Try again.`);\n        return;\n    }\n}\n\nfunction threeActionHarm(){\n    //divide up all tokens within range into an array for living and an array for undead\n    let tokensOnMap = Array.from(canvas.tokens.placeables)\n    let tokensInRange = tokensOnMap.filter(distance => canvas.grid.measureDistance(distance,caster)<=30)\n    let tokenTraitsInRange = tokensInRange.map(x => x.actor.traits)\n    let undeadTokensInRange = []\n    let livingTokensInRange = []\n    for(let i=0;i<tokensInRange.length;i++){\n        if(Array.from(tokenTraitsInRange[i]).includes(`undead`)){\n            undeadTokensInRange.push(tokensInRange[i])\n        }else if(!Array.from(tokenTraitsInRange[i]).includes(`undead`) && !Array.from(tokenTraitsInRange[i]).includes(`construct`)){\n            if (doNotTargetCaster) {\n                if (!(caster === tokensInRange[i])) livingTokensInRange.push(tokensInRange[i])\n            } else livingTokensInRange.push(tokensInRange[i])\n  \n        }\n    }\n    console.log(undeadTokensInRange)\n    console.log(livingTokensInRange)\n    new Sequence()\n        .effect()\n            .atLocation(caster)\n            .randomRotation()\n            .size(15, {gridUnits: true})\n            .file(\"jb2a.healing_generic.burst.purplepink\")\n            .waitUntilFinished(-1500)\n        .play()\n    for(let i=0;i<undeadTokensInRange.length;i++){\n        new Sequence(\"Heal Undead\")\n            .effect()\n                .atLocation(undeadTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.cure_wounds.400px.purple\")\n            .play()\n    }\n    for(let i=0;i<livingTokensInRange.length;i++){\n        new Sequence(\"Harm living\")\n            .effect()\n                .atLocation(livingTokensInRange[i])\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.caster.dark_purple\")\n            .effect()\n                .atLocation(livingTokensInRange[i])\n                .scaleToObject()\n                .file(\"jb2a.toll_the_dead.purple.skull_smoke\")\n                .delay(500)\n            .play()\n    }\n}\n\n//Defining animations for each kind of effect\n    function oneActionHarmAnimation(){\n        if(Array.from(spellTarget.actor.traits).includes(`undead`)){\n        //trigger energy strand from caster to target, then trigger healing burst on target\n        new Sequence(\"Heal undead\")\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.cure_wounds.400px.purple\")\n            .play()\n        }else{\n        //trigger energy strand from caster to target, then trigger damaging burst on target\n        new Sequence(\"Harm living\")\n            .effect()\n                .atLocation(spellTarget)\n                .randomRotation()\n                .scaleToObject(1.25)\n                .file(\"jb2a.divine_smite.caster.dark_purple\")\n            .effect()\n                .atLocation(spellTarget)\n                .scaleToObject()\n                .file(\"jb2a.toll_the_dead.purple.skull_smoke\")\n                .delay(500)\n            .play()\n        }\n    }\n    function twoActionHarmAnimation(){\n        if(Array.from(spellTarget.actor.traits).includes(`undead`)){\n            //trigger energy strand from caster to target, then trigger healing burst on target\n            new Sequence(\"Heal undead\")    \n                .effect()\n                    .atLocation(caster)\n                    .stretchTo(spellTarget)\n                    .file(\"jb2a.energy_strands.range.standard.dark_purple\")\n                    .waitUntilFinished(-1000)\n                .effect()\n                    .atLocation(spellTarget)\n                    .randomRotation()\n                    .scaleToObject(1.25)\n                    .file(\"jb2a.cure_wounds.400px.purple\")\n                .play()\n        }else{\n            //trigger energy strand from caster to target, then trigger damaging burst on target\n            new Sequence(\"Harm living\")    \n                .effect()\n                    .atLocation(caster)\n                    .stretchTo(spellTarget)\n                    .file(\"jb2a.energy_strands.range.standard.dark_purple\")\n                    .waitUntilFinished(-1000)\n                .effect()\n                    .atLocation(spellTarget)\n                    .randomRotation()\n                    .scaleToObject(1.25)\n                    .file(\"jb2a.divine_smite.caster.dark_purple\")\n                .effect()\n                    .atLocation(spellTarget)\n                    .scaleToObject()\n                    .file(\"jb2a.toll_the_dead.purple.skull_smoke\")\n                    .delay(500)\n                .play()\n        }\n    }\n    function threeActionHarmAnimation(){\n        \n    }","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.OHxEXANJvgNk9uTU"}}}
{"_id":"lkQvlxkMpsbLwwx5","name":"Tanglefoot","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/tanglefoot.webp","scope":"global","command":"let token = args[1].sourceToken\nlet target = Array.from(game.user.targets)[0]\nnew Sequence()\n    .effect()\n        .atLocation(token)\n        .stretchTo(target)\n        .file(\"jb2a.eldritch_blast.lightgreen\")\n        .waitUntilFinished(-3000)\n    .effect()\n        .scaleToObject(1.2)\n        .atLocation(target)\n        .fadeOut(500)\n        .repeats(2)\n        .fadeIn(500)\n        .file(\"jb2a.entangle.green02\")\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":true}}}
{"_id":"lmKZBrfclq8V6sJI","name":"Dimension Jumps","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/movement/pinwheel-turning-blue.webp","scope":"global","command":"let opts = {};\nlet seq = new Sequence()\nlet token = args[1].sourceToken;\nlet movementSpeed = args[0].actor.attributes.speed.total;\nlet spellLevel = args[1].item.spellcasting.highestLevel\n// Determine Spells Range\nswitch (args[0].item.name) {\n    case \"Dimensional Assault\": opts.range = movementSpeed / 2; break;\n    case \"Snare Hopping\": opts.range = 10 * spellLevel; opts.reverseTeleport = true; break;\n    case \"Abundant Step\": opts.range = Math.max(15, movementSpeed); break;\n    case \"Blink Charge\": opts.range = (spellLevel - 5) * 60; break;\n    case \"Collective Transposition\": opts.range = 30; opts.reverseTeleport = true; opts.possibleTargets = 2 + (spellLevel - 6); break;\n    case \"Dimension Door\": opts.range = spellLevel < 5 ? 120 : 1000; break;\n    case \"Dimensional Steps\": opts.range = 20 + 5 * (spellLevel - 4); break;\n    case \"Shadow Jump\": opts.range = 120; break;\n    case \"Teleport\": opts.range = 100 * (10 * (spellLevel - 6)); break;\n    case \"Unexpected Transposition\": opts.range = 30; opts.switcheroo = true; break;\n    case \"Terrain Transposition\": {\n        let rangeMenu = await warpgate.menu({\n            buttons: [{\n                label: 'Yes',\n                value: 2\n            }, {\n                label: 'No',\n                value: 1\n            }]\n        }, {\n            title: 'Are you in Favoured Terrain?'\n        })\n        opts.range = 90 * rangeMenu.buttons\n        break;\n    }\n}\n\nconsole.log(opts)\n\ntoken.actor.sheet.minimize();\nconst tokenCenter = token.center;\nlet cachedDistance = 0;\nconst checkDistance = async (crosshairs) => {\n\n    while (crosshairs.inFlight) {\n\n        //wait for initial render\n        await warpgate.wait(100);\n\n        const ray = new Ray(tokenCenter, crosshairs);\n\n        const distance = canvas.grid.measureDistances([{ ray }], { gridSpaces: true })[0]\n\n        //only update if the distance has changed\n        if (cachedDistance !== distance) {\n            cachedDistance = distance;\n            if (distance > opts.range) {\n                crosshairs.icon = 'icons/svg/hazard.svg'\n            } else {\n                crosshairs.icon = token.data.img\n            }\n            crosshairs.draw()\n            crosshairs.label = `${distance} ft`\n        }\n    }\n}\n\nconst callbacks = {\n    show: checkDistance\n}\n\nlet targetLocation = await warpgate.crosshairs.show({ size: token.data.width, icon: token.data.img, label: '0 ft.', interval: token.data.width % 2 === 0 ? 1 : -1 }, callbacks)\n\nif (targetLocation.cancelled) { token.actor.sheet.maximize(); return; }\nif (cachedDistance > opts.range) {\n    ui.notifications.error(`Your teleport has a maximum range of ${opts.range} ft. Last try.`)\n    targetLocation = await warpgate.crosshairs.show({ size: token.data.width, icon: token.data.img, label: '0 ft.', interval: -1 }, callbacks)\n}\nif (cachedDistance > opts.range) {\n    ui.notifications.error(`Your teleport has a maximum range of ${opts.range} ft.`)\n    return\n}\n\nswitch (args[0].item.name) {\n    case \"Dimensional Assault\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.purple\", \"jb2a.misty_step.01.purple\", \"jb2a.energy_strands.range.standard.purple.04\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.purple\")\n            .atLocation(token)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(token)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.purple.04\")\n            .atLocation(token)\n            .stretchTo(targetLocation)\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.purple\")\n            .attachTo(token)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(token)\n            .opacity(1.0)\n        break;\n    };\n    case \"Snare Hopping\": {\n        ui.notifications.error(`Unimplemented!`)\n        break;\n    };\n    case \"Abundant Step\": {\n        seq.effect()\n            .file(token.data.img)\n            .atLocation(token)\n            .attachTo(token, {bindAlpha: false})\n            .loopProperty(\"spriteContainer\", \"position.x\", { values: [0, 15, 0 -15], duration: 50})\n            .loopProperty(\"spriteContainer\", \"position.y\", { values: [0, -15, 0, 15], duration: 50})\n            .from(token)\n            .filter(\"Blur\", { blurX: 5, blurY: 0, quality: 5 })\n            .fadeIn(500)\n            .fadeOut(500)\n            .wait(300)\n        .animation()\n            .opacity(0)\n            .on(token)\n            .moveTowards(targetLocation)\n            .moveSpeed(50)\n            .snapToGrid()\n            .waitUntilFinished()\n        .animation()\n            .opacity(1)\n            .on(token)\n        break;\n    };\n    case \"Dimension Door\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.magic_signs.rune.conjuration.intro.blue\", \"jb2a.portals.vertical.vortex.blue\"])\n        const portalScale = token.w / canvas.grid.size * 0.7;\n        seq.effect()\n            .file('jb2a.magic_signs.rune.conjuration.intro.blue')\n            .atLocation(token)\n            .scale(portalScale * 0.7)\n            .opacity(0.5)\n            .waitUntilFinished(-600)\n        .effect()\n            .file('jb2a.portals.vertical.vortex.blue')\n            .atLocation(token)\n            .offset({ y: (token.h)})\n            .scale(portalScale)\n            .duration(1200)\n            .fadeIn(200)\n            .fadeOut(500)\n        .animation()\n            .on(token)\n            .opacity(0)\n        .effect()\n            .from(token)\n            .moveTowards({ x: token.center.x, y: token.center.y - token.h }, { ease: 'easeInCubic', rotate: false })\n            .zeroSpriteRotation()\n            .fadeOut(500)\n            .duration(500)\n            .wait(250)\n        .effect()\n            .file('jb2a.portals.vertical.vortex.blue')\n            .atLocation(targetLocation)\n            .offset({ y: (token.h)})\n            .scale(portalScale)\n            .duration(1200)\n            .fadeOut(500)\n            .fadeIn(200)\n        .effect()\n            .from(token)\n            .atLocation({ x: targetLocation.x, y: targetLocation.y - token.h }, { ease: 'easeInCubic', rotate: false })\n            .fadeIn(500)\n            .duration(500)\n            .moveTowards(targetLocation)\n            .rotate(90)\n            .waitUntilFinished()\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation, { relativeToCenter: true })\n            .opacity(1)\n        break;\n    };\n    case \"Dimensional Steps\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.blue\", \"jb2a.misty_step.01.blue\", \"jb2a.energy_strands.range.standard.blue.04\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.blue\")\n            .atLocation(token)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(token)\n            .opacity(0)\n            .waitUntilFinished()\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.blue\")\n            .attachTo(token)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(token)\n            .opacity(1.0)\n        break;\n    };\n    case \"Blink Charge\": {\n        await Sequencer.Preloader.preloadForClients([\n            \"jb2a.misty_step.02.blue\",\n            \"jb2a.misty_step.01.blue\",\n            \"jb2a.energy_strands.range.standard.blue.04\",\n            \"jb2a.energy_strands.overlay.blue.01\"\n        ])\n        seq.effect()\n            .file(\"jb2a.energy_strands.overlay.blue.01\")\n            .atLocation(token)\n            .attachTo(token)\n            .fadeIn(500)\n            .scaleToObject(token.data.scale)\n            .wait(600)\n        .effect()\n            .file(\"jb2a.misty_step.01.blue\")\n            .atLocation(token)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(token)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.blue.04\")\n            .atLocation(token)\n            .stretchTo(targetLocation)\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.blue\")\n            .attachTo(token)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(token)\n            .opacity(1.0)\n        if (Array.from(game.user.targets)[0]) {\n            await Sequencer.Preloader.preloadForClients([\"jb2a.divine_smite.target.blueyellow\"])\n            seq.effect()\n                .waitUntilFinished(-500)\n                .file(\"jb2a.divine_smite.target.blueyellow\")\n                .atLocation(Array.from(game.user.targets)[0])\n                .scale({ x: 1, y: 1 })\n        }\n        break;\n    };\n    case \"Shadow Jump\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.misty_step.02.dark_black\", \"jb2a.misty_step.01.dark_black\"])\n        seq.effect()\n            .file(\"jb2a.misty_step.01.dark_black\")\n            .atLocation(token)\n            .scaleToObject(2)\n            .wait(600)\n        .animation()\n            .on(token)\n            .opacity(0)\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.drop_shadow.dark_black\")\n            .atLocation(token)\n            .moveTowards(targetLocation)\n            .scale({ x: 1, y: 1 })\n            .waitUntilFinished(-1500)\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n            .waitUntilFinished()\n        .effect()\n            .file(\"jb2a.misty_step.02.dark_black\")\n            .attachTo(token)\n            .scaleToObject(2)\n            .wait(1500)\n        .animation()\n            .on(token)\n            .opacity(1.0)\n        break;\n    };\n    case \"Terrain Transposition\": {\n        await Sequencer.Preloader.preloadForClients([\"jb2a.swirling_leaves.complete.01.green.0\", \"jb2a.energy_strands.range.standard.dark_green.03\"])\n        seq.effect()\n            .file(\"jb2a.swirling_leaves.complete.01.green.0\")\n            .atLocation(token)\n            .attachTo(token)\n            .fadeIn(500)\n            .scaleToObject(token.data.scale * 2)\n            .waitUntilFinished(-2000)\n            .fadeOut(500)\n        .effect()\n            .from(token)\n            .fadeOut(500)\n            .atLocation(token)\n            .attachTo(token, {bindAlpha: false})\n        .animation()\n            .on(token)\n            .fadeOut(500)\n            .opacity(0)\n            .waitUntilFinished()\n        .animation()\n            .on(token)\n            .teleportTo(targetLocation)\n            .snapToGrid()\n        .effect()\n            .file(\"jb2a.energy_strands.range.standard.dark_green\")\n            .atLocation(token)\n            .stretchTo(targetLocation)\n            .waitUntilFinished(-1300)\n        .animation()\n            .on(token)\n            .fadeIn(500)\n            .opacity(1.0)\n        break;\n    };\n    case \"Collective Transposition\": {\n        break;\n    };\n    case \"Teleport\": {\n        break;\n    };\n    case \"Unexpected Transposition\": {\n        break;\n    };\n}\n\nawait seq.play()\n\ntoken.actor.sheet.maximize();","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"}}}
{"_id":"nA5gqHtwwwsyOtih","name":"Encumbered","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/commodities/stone/stone-pile-grey.webp","scope":"global","command":"let token = args[1].sourceToken\nlet conditionOverhead = Sequencer.EffectManager.getEffects({ name: `${token.name} - Conditions Overhead*`, object: token })\nif (args[0] == \"on\") {\n    new Sequence()\n        .effect()\n            .name(`${token.name} - Conditions Overhead - Encumbered`)\n            .attachTo(token, {bindAlpha: false})\n            .from(token)\n            .loopProperty(\"spriteContainer\", \"scale.x\", { from: 1, to: 0.9, duration: 2000, pingPong: true})\n            .loopProperty(\"spriteContainer\", \"scale.y\", { from: 1, to: 0.9, duration: 2000, pingPong: true})\n            .persist()\n            .filter(\"Glow\", { color: 000000, distance: 20, outerStrength: 1, innerStrength: 0 })\n            .fadeOut(500)\n            // Clumsy .loopProperty(\"spriteContainer\", \"rotation\", { values: [0, 5, 0, -5], duration: 2000, pingPong: true})\n        .wait(100)\n        .animation()\n            .fadeOut(100)\n            .on(token)\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence()\n        .animation()\n            .fadeIn(100)\n            .on(token)\n        .play()\n    await Sequencer.EffectManager.endEffects({ name: `${token.name} - Conditions Overhead - Encumbered`, object: token });\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"},"advanced-macros":{"runAsGM":false}}}
{"_id":"pC8bqYNdqGeeUoWO","name":"Grim Tendrils","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/unholy/energy-smoke-pink.webp","scope":"global","command":"const template = args[1].templateData;\nnew Sequence()\n    .effect()\n        .file('jb2a.energy_strands.range.multiple.dark_purple.01')\n        .fadeIn(500)\n        .fadeOut(500)\n        .atLocation(template)\n        .rotateTowards(template)\n        .stretchTo(template, {})\n        .scale({ x: 1.4 })\n        .spriteOffset({ x: -50 })\n    .play()","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"exportSource":{"world":"hogwarts","system":"pf2e","coreVersion":"9.269","systemVersion":"3.10.2.11602"},"core":{"sourceId":"Macro.1wpIPbvbCvQaueft"}}}
{"_id":"tItdi7rFVh3PEyKx","name":"Petrified","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"icons/magic/earth/strike-body-stone-crumble.webp","scope":"global","command":"let token = args[1].sourceToken\nif (args[0] == \"on\") {\n    await Sequencer.Preloader.preloadForClients([token.data.img])\n    new Sequence()\n        .effect()\n            .name(\"Petrified\")\n            .attachTo(token, {bindAlpha: false})\n            .from(token)\n            .filter(\"ColorMatrix\", { \n                hue: 0, \n                brightness: 1, \n                contrast: 0, \n                saturate: -1\n            })\n            .persist()\n            // .fadeIn(500)\n            .fadeOut(500)\n        .effect()\n            .name(\"Petrified\")\n            .scaleToObject(2)\n            .randomRotation()\n            .file(\"jb2a.impact.ground_crack.still_frame.02\")\n            .attachTo(token, {bindAlpha: false})\n            .mask(token)\n            .persist()\n        .animation()\n            .on(token)\n            .fadeOut(100)\n        .play()\n} else if (args[0] == \"off\") {\n    new Sequence()\n        .animation()\n            .fadeIn(100)\n            .on(token)\n        .play()\n    await Sequencer.EffectManager.endEffects({ name: \"Petrified\", object: token })\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"advanced-macros":{"runAsGM":false},"core":{"sourceId":"Macro.a6jod3yUvFLPBT8W"}}}
{"_id":"y2Hundr4PzbGNeys","name":"Bless_Animation","type":"script","author":"ynn7ZMgoRi8oPGYQ","img":"systems/pf2e/icons/spells/bless.webp","scope":"global","command":"let caster = args[1].sourceToken\n\nlet blessAnim = Sequencer.EffectManager.getEffects({ origin: \"BlessAnim\", source: caster })[0]\n\nlet thereIsIntro = Sequencer.EffectManager.getEffects({ origin: \"BlessAnim\", name: \"Bless Intro\" })[0] //locates the bless animation created by Bless_Animation\n\nfunction main() {\n    //checks to ensure a single token is selected\n    if (canvas.tokens.controlled.length == 0) {\n        ui.notifications.error(\"Select the token on which a bless effect is active.\")\n        return\n    } else if (canvas.tokens.controlled.length > 1) {\n        ui.notifications.error(\"Select only one token.\")\n        return\n    }\n}\nif (blessAnim) {\n    let endAnimation = await warpgate.menu({\n        inputs: [{ type: 'info', label: 'End, Keep, or Expand the Bless Animation?'},],\n        buttons: [{\n            label: 'End',\n            value: 1\n        }, {\n            label: 'Keep',\n            value: 2\n        }, {\n            label: 'Expand',\n            value: 3\n        }]\n    }, { title: \"Bless\" })\n    console.log(endAnimation)\n    if (endAnimation.buttons === 1) {\n        Sequencer.EffectManager.endEffects({ origin: \"BlessAnim\", source: caster })[0]\n    } else if (endAnimation.buttons === 3) {\n        let incrementValue = 3; //3 is the value for radius = 1 square\n\n        main()\n\n        //checks to make sure bless is active on the selected token\n        if (Sequencer.EffectManager.getEffects({ origin: \"BlessAnim\", source: caster })[0] === undefined) {\n            ui.notifications.error(`There are no instances of the bless effect active on this token.`)\n            return\n        }\n\n        //increments the radius of the effect by 1 square\n        blessAnim.update({\n            size: {\n                width: blessAnim.data.size.width + incrementValue,\n                height: blessAnim.data.size.height + incrementValue,\n                gridUnits: true\n            }\n        })\n    }\n\n} else if (!thereIsIntro) {\n    new Sequence(\"Bless\")\n        .effect()\n            .file(\"jb2a.bless.400px.intro.yellow\")\n            .scaleIn(2, 1000, {ease: \"easeInBounce\"})\n            .atLocation(caster)\n            .waitUntilFinished(-500)\n            .name(\"Bless Intro\")\n            .origin(\"BlessAnim\")\n        .effect()\n            .file(\"jb2a.bless.400px.loop.yellow\")\n            .atLocation(caster)\n            .fadeOut(500)\n            .persist()\n            .attachTo(caster)\n            .belowTokens(true)\n            .origin(\"BlessAnim\")\n            .name(\"Bless\")\n            .scaleOut(0, 500, {ease: \"easeOutCubic\"})\n            .size(4, { gridUnits: true })\n        .play()\n}","folder":null,"sort":0,"permission":{"default":0,"ynn7ZMgoRi8oPGYQ":3},"flags":{"core":{"sourceId":"Macro.eJJhPoLdv7ul62dc"},"advanced-macros":{"runAsGM":false}}}
